### YamlMime:ManagedReference
items:
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex
  commentId: T:BelNytheraSeiche.WaveletMatrix.FMIndex
  id: FMIndex
  parent: BelNytheraSeiche.WaveletMatrix
  children:
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Contains(System.ReadOnlySpan{System.Char})
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan{System.Char})
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Create(System.ReadOnlyMemory{System.Char},System.Int32)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Create(System.String,System.Int32)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.Byte[])
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.IO.Stream)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.String)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst(System.ReadOnlySpan{System.Char})
  - BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet(System.Int32,System.Int32,System.Int32,System.Double)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan{System.Char},System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped(System.ReadOnlySpan{System.Char},System.Boolean,System.Char,System.Char)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped(System.ReadOnlySpan{System.Char},System.Char,System.Char)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard(System.ReadOnlySpan{System.Char},System.Char,BelNytheraSeiche.WaveletMatrix.SortOrder)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.RestoreSourceText
  - BelNytheraSeiche.WaveletMatrix.FMIndex.SA
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,System.IO.Stream,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,System.String,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  - BelNytheraSeiche.WaveletMatrix.FMIndex.Text
  - BelNytheraSeiche.WaveletMatrix.FMIndex.UniqueCharacters
  - BelNytheraSeiche.WaveletMatrix.FMIndex.WM
  langs:
  - csharp
  - vb
  name: FMIndex
  nameWithType: FMIndex
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex
  type: Class
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: FMIndex
    path: src/FMIndex.cs
    startLine: 37
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Provides a high-performance full-text search index based on the FM-Index algorithm.

    This implementation supports both a full Suffix Array mode for fast locating and a memory-efficient sampling mode.
  remarks: >-
    The FM-Index is a compressed full-text index that allows for fast counting (<xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan%7bSystem.Char%7d)" data-throw-if-not-resolved="false"></xref>) and locating (<xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan%7bSystem.Char%7d%2cBelNytheraSeiche.WaveletMatrix.SortOrder)" data-throw-if-not-resolved="false"></xref>)

    of patterns within a large text. It is constructed using the Burrows-Wheeler Transform (BWT), a Wavelet Matrix, and a Suffix Array.
  example: []
  syntax:
    content: public sealed class FMIndex
    content.vb: Public NotInheritable Class FMIndex
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.UniqueCharacters
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.UniqueCharacters
  id: UniqueCharacters
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: UniqueCharacters
  nameWithType: FMIndex.UniqueCharacters
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.UniqueCharacters
  type: Property
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: UniqueCharacters
    path: src/FMIndex.cs
    startLine: 56
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets an enumerable collection of the unique characters present in the indexed text.
  remarks: >-
    The order of the characters in the returned collection is not guaranteed.

    This property provides a simple way to inspect the alphabet of the indexed text.
  example: []
  syntax:
    content: public IEnumerable<char> UniqueCharacters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Char}
    content.vb: Public ReadOnly Property UniqueCharacters As IEnumerable(Of Char)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.UniqueCharacters*
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Text
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.Text
  id: Text
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: FMIndex.Text
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Text
  type: Property
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Text
    path: src/FMIndex.cs
    startLine: 63
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Gets the original source text used to build the index, excluding the internal terminator character.

    This property is only available when the index is built in full Suffix Array mode (i.e., when <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled" data-throw-if-not-resolved="false"></xref> is <code>false</code>).
  example: []
  syntax:
    content: public ReadOnlyMemory<char> Text { get; }
    parameters: []
    return:
      type: System.ReadOnlyMemory{System.Char}
    content.vb: Public ReadOnly Property Text As ReadOnlyMemory(Of Char)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Text*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the index is in sampling mode.
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.WM
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.WM
  id: WM
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: WM
  nameWithType: FMIndex.WM
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.WM
  type: Property
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: WM
    path: src/FMIndex.cs
    startLine: 68
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets the underlying Wavelet Matrix instance used by this index.
  example: []
  syntax:
    content: public WaveletMatrixGeneric<char> WM { get; }
    parameters: []
    return:
      type: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric{System.Char}
    content.vb: Public ReadOnly Property WM As WaveletMatrixGeneric(Of Char)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.WM*
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.SA
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.SA
  id: SA
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: SA
  nameWithType: FMIndex.SA
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.SA
  type: Property
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: SA
    path: src/FMIndex.cs
    startLine: 75
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Gets the underlying Suffix Array instance used by this index.

    This property is only available when the index is built in full Suffix Array mode (i.e., when <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled" data-throw-if-not-resolved="false"></xref> is <code>false</code>).
  example: []
  syntax:
    content: public SuffixArray SA { get; }
    parameters: []
    return:
      type: BelNytheraSeiche.WaveletMatrix.SuffixArray
    content.vb: Public ReadOnly Property SA As SuffixArray
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.SA*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if the index is in sampling mode.
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
  id: IsSampled
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: IsSampled
  nameWithType: FMIndex.IsSampled
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
  type: Property
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: IsSampled
    path: src/FMIndex.cs
    startLine: 80
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets a value indicating whether the index is using Suffix Array sampling.
  example: []
  syntax:
    content: public bool IsSampled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSampled As Boolean
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled*
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Create(System.String,System.Int32)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Create(string, int)
  nameWithType: FMIndex.Create(string, int)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Create(string, int)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Create
    path: src/FMIndex.cs
    startLine: 106
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Creates a new instance of the <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> from a string, with an optional Suffix Array sampling rate.
  example: []
  syntax:
    content: public static FMIndex Create(string text, int sampleRate = 0)
    parameters:
    - id: text
      type: System.String
      description: The text to be indexed.
    - id: sampleRate
      type: System.Int32
      description: >-
        The sampling rate for the Suffix Array. If 0 (default), the full Suffix Array is stored for fast locating.

        If greater than 1, only every N-th entry of the Suffix Array is stored to save memory, at the cost of slower locate operations.
    return:
      type: BelNytheraSeiche.WaveletMatrix.FMIndex
      description: A new, fully initialized <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Function Create(text As String, sampleRate As Integer = 0) As FMIndex
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">text</code> is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">sampleRate</code> is less than 0.
  nameWithType.vb: FMIndex.Create(String, Integer)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Create(String, Integer)
  name.vb: Create(String, Integer)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Create(System.ReadOnlyMemory{System.Char},System.Int32)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Create(System.ReadOnlyMemory{System.Char},System.Int32)
  id: Create(System.ReadOnlyMemory{System.Char},System.Int32)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Create(ReadOnlyMemory<char>, int)
  nameWithType: FMIndex.Create(ReadOnlyMemory<char>, int)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Create(System.ReadOnlyMemory<char>, int)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Create
    path: src/FMIndex.cs
    startLine: 120
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Creates a new instance of the <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> from a read-only memory segment of characters, with an optional Suffix Array sampling rate.

    An internal terminator character ('\0') is appended to the text for correctness.
  example: []
  syntax:
    content: public static FMIndex Create(ReadOnlyMemory<char> text, int sampleRate = 0)
    parameters:
    - id: text
      type: System.ReadOnlyMemory{System.Char}
      description: The text to be indexed.
    - id: sampleRate
      type: System.Int32
      description: >-
        The sampling rate for the Suffix Array. If 0 (default), the full Suffix Array is stored for fast locating.

        If greater than 1, only every N-th entry of the Suffix Array is stored, saving memory at the cost of slower locate operations.
    return:
      type: BelNytheraSeiche.WaveletMatrix.FMIndex
      description: A new, fully initialized <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Function Create(text As ReadOnlyMemory(Of Char), sampleRate As Integer = 0) As FMIndex
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Create*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">sampleRate</code> is less than 0.
  nameWithType.vb: FMIndex.Create(ReadOnlyMemory(Of Char), Integer)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Create(System.ReadOnlyMemory(Of Char), Integer)
  name.vb: Create(ReadOnlyMemory(Of Char), Integer)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  id: Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Serialize(FMIndex, SerializationOptions?)
  nameWithType: FMIndex.Serialize(FMIndex, SerializationOptions?)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex, BelNytheraSeiche.WaveletMatrix.SerializationOptions?)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Serialize
    path: src/FMIndex.cs
    startLine: 189
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Serializes the <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> instance into a byte array.
  example: []
  syntax:
    content: public static byte[] Serialize(FMIndex obj, SerializationOptions? options = null)
    parameters:
    - id: obj
      type: BelNytheraSeiche.WaveletMatrix.FMIndex
      description: The instance to serialize.
    - id: options
      type: BelNytheraSeiche.WaveletMatrix.SerializationOptions
      description: >-
        Serialization options, such as the compression level. 

        If null, <xref href="BelNytheraSeiche.WaveletMatrix.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    return:
      type: System.Byte[]
      description: A byte array containing the serialized data.
    content.vb: Public Shared Function Serialize(obj As FMIndex, options As SerializationOptions = Nothing) As Byte()
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">obj</code> is null.
  nameWithType.vb: FMIndex.Serialize(FMIndex, SerializationOptions)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex, BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  name.vb: Serialize(FMIndex, SerializationOptions)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,System.String,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,System.String,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  id: Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,System.String,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Serialize(FMIndex, string, SerializationOptions?)
  nameWithType: FMIndex.Serialize(FMIndex, string, SerializationOptions?)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex, string, BelNytheraSeiche.WaveletMatrix.SerializationOptions?)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Serialize
    path: src/FMIndex.cs
    startLine: 213
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Serializes the <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> instance to the specified file.
  example: []
  syntax:
    content: public static void Serialize(FMIndex obj, string file, SerializationOptions? options = null)
    parameters:
    - id: obj
      type: BelNytheraSeiche.WaveletMatrix.FMIndex
      description: The instance to serialize.
    - id: file
      type: System.String
      description: The path of the file to write to.
    - id: options
      type: BelNytheraSeiche.WaveletMatrix.SerializationOptions
      description: >-
        Serialization options, such as the compression level. 

        If null, <xref href="BelNytheraSeiche.WaveletMatrix.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    content.vb: Public Shared Sub Serialize(obj As FMIndex, file As String, options As SerializationOptions = Nothing)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">obj</code> or <code class="paramref">file</code> is null.
  nameWithType.vb: FMIndex.Serialize(FMIndex, String, SerializationOptions)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex, String, BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  name.vb: Serialize(FMIndex, String, SerializationOptions)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,System.IO.Stream,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,System.IO.Stream,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  id: Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex,System.IO.Stream,BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Serialize(FMIndex, Stream, SerializationOptions?)
  nameWithType: FMIndex.Serialize(FMIndex, Stream, SerializationOptions?)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex, System.IO.Stream, BelNytheraSeiche.WaveletMatrix.SerializationOptions?)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Serialize
    path: src/FMIndex.cs
    startLine: 240
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Serializes the <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> instance to a stream.

    The data is compressed using Brotli and includes a checksum for integrity verification.
  example: []
  syntax:
    content: public static void Serialize(FMIndex obj, Stream stream, SerializationOptions? options = null)
    parameters:
    - id: obj
      type: BelNytheraSeiche.WaveletMatrix.FMIndex
      description: The instance to serialize.
    - id: stream
      type: System.IO.Stream
      description: The stream to write the serialized data to.
    - id: options
      type: BelNytheraSeiche.WaveletMatrix.SerializationOptions
      description: >-
        Serialization options, such as the compression level. 

        If null, <xref href="BelNytheraSeiche.WaveletMatrix.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    content.vb: Public Shared Sub Serialize(obj As FMIndex, stream As Stream, options As SerializationOptions = Nothing)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">obj</code> or <code class="paramref">stream</code> is null.
  nameWithType.vb: FMIndex.Serialize(FMIndex, Stream, SerializationOptions)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize(BelNytheraSeiche.WaveletMatrix.FMIndex, System.IO.Stream, BelNytheraSeiche.WaveletMatrix.SerializationOptions)
  name.vb: Serialize(FMIndex, Stream, SerializationOptions)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.Byte[])
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.Byte[])
  id: Deserialize(System.Byte[])
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Deserialize(byte[])
  nameWithType: FMIndex.Deserialize(byte[])
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(byte[])
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Deserialize
    path: src/FMIndex.cs
    startLine: 393
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Deserializes a byte array into a <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static FMIndex Deserialize(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: The byte array containing the serialized data.
    return:
      type: BelNytheraSeiche.WaveletMatrix.FMIndex
      description: A new, deserialized instance of <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Deserialize(data As Byte()) As FMIndex
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">data</code> is null.
  nameWithType.vb: FMIndex.Deserialize(Byte())
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(Byte())
  name.vb: Deserialize(Byte())
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.String)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.String)
  id: Deserialize(System.String)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Deserialize(string)
  nameWithType: FMIndex.Deserialize(string)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(string)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Deserialize
    path: src/FMIndex.cs
    startLine: 412
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Deserializes a <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> instance from the specified file.
  example: []
  syntax:
    content: public static FMIndex Deserialize(string file)
    parameters:
    - id: file
      type: System.String
      description: The path of the file to read from.
    return:
      type: BelNytheraSeiche.WaveletMatrix.FMIndex
      description: A new, deserialized instance.
    content.vb: Public Shared Function Deserialize(file As String) As FMIndex
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">file</code> is null.
  nameWithType.vb: FMIndex.Deserialize(String)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(String)
  name.vb: Deserialize(String)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.IO.Stream)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.IO.Stream)
  id: Deserialize(System.IO.Stream)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Deserialize(Stream)
  nameWithType: FMIndex.Deserialize(Stream)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Deserialize
    path: src/FMIndex.cs
    startLine: 433
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Deserializes a <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex" data-throw-if-not-resolved="false"></xref> instance from a stream.

    It verifies the file format, type identifier, and checksum.
  example: []
  syntax:
    content: public static FMIndex Deserialize(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to read the serialized data from.
    return:
      type: BelNytheraSeiche.WaveletMatrix.FMIndex
      description: A new, deserialized instance.
    content.vb: Public Shared Function Deserialize(stream As Stream) As FMIndex
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">stream</code> is null.
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: Thrown if the data format is unsupported, the type is incompatible, or the data is corrupt.
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Contains(System.ReadOnlySpan{System.Char})
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Contains(System.ReadOnlySpan{System.Char})
  id: Contains(System.ReadOnlySpan{System.Char})
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Contains(ReadOnlySpan<char>)
  nameWithType: FMIndex.Contains(ReadOnlySpan<char>)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Contains(System.ReadOnlySpan<char>)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Contains
    path: src/FMIndex.cs
    startLine: 526
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Determines whether the specified pattern exists within the text.
  example: []
  syntax:
    content: public bool Contains(ReadOnlySpan<char> pattern)
    parameters:
    - id: pattern
      type: System.ReadOnlySpan{System.Char}
      description: The pattern to check for.
    return:
      type: System.Boolean
      description: <code>true</code> if the pattern is found; otherwise, <code>false</code>.
    content.vb: Public Function Contains(pattern As ReadOnlySpan(Of Char)) As Boolean
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Contains*
  nameWithType.vb: FMIndex.Contains(ReadOnlySpan(Of Char))
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Contains(System.ReadOnlySpan(Of Char))
  name.vb: Contains(ReadOnlySpan(Of Char))
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst(System.ReadOnlySpan{System.Char})
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst(System.ReadOnlySpan{System.Char})
  id: FindFirst(System.ReadOnlySpan{System.Char})
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: FindFirst(ReadOnlySpan<char>)
  nameWithType: FMIndex.FindFirst(ReadOnlySpan<char>)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst(System.ReadOnlySpan<char>)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: FindFirst
    path: src/FMIndex.cs
    startLine: 534
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Finds the first occurrence of a pattern within the text.
  example: []
  syntax:
    content: public int FindFirst(ReadOnlySpan<char> pattern)
    parameters:
    - id: pattern
      type: System.ReadOnlySpan{System.Char}
      description: The pattern to search for.
    return:
      type: System.Int32
      description: The zero-based starting position of the first occurrence, or -1 if the pattern is not found.
    content.vb: Public Function FindFirst(pattern As ReadOnlySpan(Of Char)) As Integer
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst*
  nameWithType.vb: FMIndex.FindFirst(ReadOnlySpan(Of Char))
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst(System.ReadOnlySpan(Of Char))
  name.vb: FindFirst(ReadOnlySpan(Of Char))
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan{System.Char})
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan{System.Char})
  id: Count(System.ReadOnlySpan{System.Char})
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Count(ReadOnlySpan<char>)
  nameWithType: FMIndex.Count(ReadOnlySpan<char>)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan<char>)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Count
    path: src/FMIndex.cs
    startLine: 549
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Counts the number of occurrences of a pattern within the text.

    This operation is extremely fast, with performance proportional to the pattern length, not the text length.
  example: []
  syntax:
    content: public int Count(ReadOnlySpan<char> pattern)
    parameters:
    - id: pattern
      type: System.ReadOnlySpan{System.Char}
      description: The pattern to search for.
    return:
      type: System.Int32
      description: The total number of non-overlapping occurrences of the pattern.
    content.vb: Public Function Count(pattern As ReadOnlySpan(Of Char)) As Integer
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Count*
  nameWithType.vb: FMIndex.Count(ReadOnlySpan(Of Char))
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan(Of Char))
  name.vb: Count(ReadOnlySpan(Of Char))
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  id: Locate(System.ReadOnlySpan{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: Locate(ReadOnlySpan<char>, SortOrder)
  nameWithType: FMIndex.Locate(ReadOnlySpan<char>, SortOrder)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan<char>, BelNytheraSeiche.WaveletMatrix.SortOrder)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Locate
    path: src/FMIndex.cs
    startLine: 572
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Finds all starting positions of a pattern within the text.
  remarks: >-
    <b>Prefix Search (Forward Match):</b> Due to the nature of the FM-Index's backward search algorithm, this method inherently functions as a prefix search. It efficiently finds all positions in the text that *start with* the specified <code class="paramref">pattern</code>.

    <br /><br />

    <b>Regarding Suffix Search (Backward Match):</b> This method does *not* perform a general suffix search (e.g., finding all words that *end with* "ing"). For that functionality, an index of the reversed text would be required.

    However, to find the end position of an *exact match* of the <code class="paramref">pattern</code>, you can simply add the pattern's length to the starting position returned by this method.

    <br /><br />

    In full Suffix Array mode, this operation is very fast. In sampling mode, locating each position requires additional

    computation (LF-mapping steps), making it slower but significantly more memory-efficient.

    Specifying <xref href="BelNytheraSeiche.WaveletMatrix.SortOrder.Ascending" data-throw-if-not-resolved="false"></xref> or <xref href="BelNytheraSeiche.WaveletMatrix.SortOrder.Descending" data-throw-if-not-resolved="false"></xref> may require collecting all results

    and sorting them, which incurs a performance cost. For the highest performance where order is not important, use <xref href="BelNytheraSeiche.WaveletMatrix.SortOrder.Unordered" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IEnumerable<int> Locate(ReadOnlySpan<char> pattern, SortOrder sortOrder = SortOrder.Ascending)
    parameters:
    - id: pattern
      type: System.ReadOnlySpan{System.Char}
      description: The pattern to search for.
    - id: sortOrder
      type: BelNytheraSeiche.WaveletMatrix.SortOrder
      description: Specifies the order of the returned positions. Defaults to <xref href="BelNytheraSeiche.WaveletMatrix.SortOrder.Ascending" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: An enumerable collection of the zero-based starting positions of all occurrences.
    content.vb: Public Function Locate(pattern As ReadOnlySpan(Of Char), sortOrder As SortOrder = SortOrder.Ascending) As IEnumerable(Of Integer)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate*
  nameWithType.vb: FMIndex.Locate(ReadOnlySpan(Of Char), SortOrder)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan(Of Char), BelNytheraSeiche.WaveletMatrix.SortOrder)
  name.vb: Locate(ReadOnlySpan(Of Char), SortOrder)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan{System.Char},System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan{System.Char},System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  id: LocateFuzzy(System.ReadOnlySpan{System.Char},System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: LocateFuzzy(ReadOnlySpan<char>, int, bool, bool, char?, SortOrder)
  nameWithType: FMIndex.LocateFuzzy(ReadOnlySpan<char>, int, bool, bool, char?, SortOrder)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan<char>, int, bool, bool, char?, BelNytheraSeiche.WaveletMatrix.SortOrder)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: LocateFuzzy
    path: src/FMIndex.cs
    startLine: 668
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Finds all occurrences of a pattern within the text, allowing for a specified number of errors (edit distance).

    This implementation considers substitutions, deletions, and insertions as errors. It can also handle a wildcard character.
  remarks: >-
    Fuzzy search is significantly more computationally expensive than an exact search.

    The complexity increases with the pattern length, the alphabet size, and especially the <code class="paramref">maxDistance</code>.

    <br /><br />

    <b>Performance Warning:</b> Using a very short pattern (e.g., 1-2 characters) with a <code class="paramref">maxDistance</code> of 1 or more can result in a very large number of matches, potentially leading to poor performance and high memory usage.

    <br /><br />

    For the highest performance where order is not important, use <xref href="BelNytheraSeiche.WaveletMatrix.SortOrder.Unordered" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IEnumerable<FMIndex.FuzzyMatch> LocateFuzzy(ReadOnlySpan<char> pattern, int maxDistance = 1, bool disableDeletion = false, bool disableInsertion = false, char? wildcardQ = null, SortOrder sortOrder = SortOrder.Ascending)
    parameters:
    - id: pattern
      type: System.ReadOnlySpan{System.Char}
      description: The pattern to search for.
    - id: maxDistance
      type: System.Int32
      description: The maximum allowed edit distance (number of errors). Defaults to 1.
    - id: disableDeletion
      type: System.Boolean
      description: >-
        When set to <code>true</code>, the search will not allow errors where a character from the pattern is skipped.

        This effectively prevents matching substrings that are shorter than the pattern.
    - id: disableInsertion
      type: System.Boolean
      description: >-
        When set to <code>true</code>, the search will not allow errors where an extra character from the text is included.

        This effectively prevents matching substrings that are longer than the pattern.
    - id: wildcardQ
      type: System.Nullable{System.Char}
      description: >-
        Specifies a character to be treated as a single-character wildcard. A wildcard match has an edit distance of 0.

        Defaults to <code>null</code> (no wildcard).
    - id: sortOrder
      type: BelNytheraSeiche.WaveletMatrix.SortOrder
      description: Specifies the order of the returned matches based on their position. Defaults to <xref href="BelNytheraSeiche.WaveletMatrix.SortOrder.Ascending" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch}
      description: An enumerable collection of <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch" data-throw-if-not-resolved="false"></xref> objects, each containing the position and length of an approximate match.
    content.vb: Public Function LocateFuzzy(pattern As ReadOnlySpan(Of Char), maxDistance As Integer = 1, disableDeletion As Boolean = False, disableInsertion As Boolean = False, wildcardQ As Char? = Nothing, sortOrder As SortOrder = SortOrder.Ascending) As IEnumerable(Of FMIndex.FuzzyMatch)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">maxDistance</code> is negative.
  nameWithType.vb: FMIndex.LocateFuzzy(ReadOnlySpan(Of Char), Integer, Boolean, Boolean, Char?, SortOrder)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan(Of Char), Integer, Boolean, Boolean, Char?, BelNytheraSeiche.WaveletMatrix.SortOrder)
  name.vb: LocateFuzzy(ReadOnlySpan(Of Char), Integer, Boolean, Boolean, Char?, SortOrder)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard(System.ReadOnlySpan{System.Char},System.Char,BelNytheraSeiche.WaveletMatrix.SortOrder)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard(System.ReadOnlySpan{System.Char},System.Char,BelNytheraSeiche.WaveletMatrix.SortOrder)
  id: LocateWildcard(System.ReadOnlySpan{System.Char},System.Char,BelNytheraSeiche.WaveletMatrix.SortOrder)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: LocateWildcard(ReadOnlySpan<char>, char, SortOrder)
  nameWithType: FMIndex.LocateWildcard(ReadOnlySpan<char>, char, SortOrder)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard(System.ReadOnlySpan<char>, char, BelNytheraSeiche.WaveletMatrix.SortOrder)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: LocateWildcard
    path: src/FMIndex.cs
    startLine: 757
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Finds all occurrences of a pattern containing single-character wildcards ('?').
  remarks: >-
    The <code class="paramref">wildcardQ</code> character matches any single character. This search is an exact match for all non-wildcard characters.

    This method is optimized for strict wildcard searches and is generally faster than using wildcards with <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan%7bSystem.Char%7d%2cSystem.Int32%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Nullable%7bSystem.Char%7d%2cBelNytheraSeiche.WaveletMatrix.SortOrder)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IEnumerable<int> LocateWildcard(ReadOnlySpan<char> pattern, char wildcardQ = '?', SortOrder sortOrder = SortOrder.Ascending)
    parameters:
    - id: pattern
      type: System.ReadOnlySpan{System.Char}
      description: The pattern to search for, which can include <code class="paramref">wildcardQ</code> as a wildcard.
    - id: wildcardQ
      type: System.Char
      description: Specifies a character to be treated as a single-character wildcard. A wildcard match matches any. Defaults to <code>'?'</code>.
    - id: sortOrder
      type: BelNytheraSeiche.WaveletMatrix.SortOrder
      description: Specifies the order of the returned positions.
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: An enumerable collection of the zero-based starting positions of all matches.
    content.vb: Public Function LocateWildcard(pattern As ReadOnlySpan(Of Char), wildcardQ As Char = "?"c, sortOrder As SortOrder = SortOrder.Ascending) As IEnumerable(Of Integer)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard*
  nameWithType.vb: FMIndex.LocateWildcard(ReadOnlySpan(Of Char), Char, SortOrder)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard(System.ReadOnlySpan(Of Char), Char, BelNytheraSeiche.WaveletMatrix.SortOrder)
  name.vb: LocateWildcard(ReadOnlySpan(Of Char), Char, SortOrder)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped(System.ReadOnlySpan{System.Char},System.Char,System.Char)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped(System.ReadOnlySpan{System.Char},System.Char,System.Char)
  id: LocateSingleGapped(System.ReadOnlySpan{System.Char},System.Char,System.Char)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: LocateSingleGapped(ReadOnlySpan<char>, char, char)
  nameWithType: FMIndex.LocateSingleGapped(ReadOnlySpan<char>, char, char)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped(System.ReadOnlySpan<char>, char, char)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: LocateSingleGapped
    path: src/FMIndex.cs
    startLine: 830
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Finds all occurrences of a pattern containing a single multi-character wildcard ('*').

    This method splits the pattern by the wildcard, finds all occurrences of the leading and trailing parts, and then combines the results.
  remarks: >-
    This method also supports single-character wildcards ('?') within the parts of the pattern before and after the '*'.

    For example, a pattern like "pr?gram*engine" can be used.
  example: []
  syntax:
    content: public IEnumerable<FMIndex.SingleGappedMatch> LocateSingleGapped(ReadOnlySpan<char> pattern, char wildcardA = '*', char wildcardQ = '?')
    parameters:
    - id: pattern
      type: System.ReadOnlySpan{System.Char}
      description: The pattern containing a single <code class="paramref">wildcardA</code> wildcard.
    - id: wildcardA
      type: System.Char
      description: Specifies a character to be treated as a multi-character wildcard. Defaults to <code>'*'</code>.
    - id: wildcardQ
      type: System.Char
      description: Specifies a character to be treated as a single-character wildcard. A wildcard match matches any. Defaults to <code>'?'</code>.
    return:
      type: System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch}
      description: An enumerable collection of <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch" data-throw-if-not-resolved="false"></xref> objects, each indicating the details of a matched substring.
    content.vb: Public Function LocateSingleGapped(pattern As ReadOnlySpan(Of Char), wildcardA As Char = "*"c, wildcardQ As Char = "?"c) As IEnumerable(Of FMIndex.SingleGappedMatch)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the pattern contains multiple wildcard characters, or <code class="paramref">wildcardA</code> equal <code class="paramref">wildcardQ</code>.
  nameWithType.vb: FMIndex.LocateSingleGapped(ReadOnlySpan(Of Char), Char, Char)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped(System.ReadOnlySpan(Of Char), Char, Char)
  name.vb: LocateSingleGapped(ReadOnlySpan(Of Char), Char, Char)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped(System.ReadOnlySpan{System.Char},System.Boolean,System.Char,System.Char)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped(System.ReadOnlySpan{System.Char},System.Boolean,System.Char,System.Char)
  id: LocateMultiGapped(System.ReadOnlySpan{System.Char},System.Boolean,System.Char,System.Char)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: LocateMultiGapped(ReadOnlySpan<char>, bool, char, char)
  nameWithType: FMIndex.LocateMultiGapped(ReadOnlySpan<char>, bool, char, char)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped(System.ReadOnlySpan<char>, bool, char, char)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: LocateMultiGapped
    path: src/FMIndex.cs
    startLine: 914
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Finds all occurrences of a pattern containing multiple multi-character wildcards ('*').
  remarks: >-
    This method can handle complex patterns like "a*b*c". The parts themselves can also contain single-character wildcards ('?').

    <br /><br />

    <b>Wildcard Normalization:</b> Before searching, the pattern is normalized according to the following rules:

    <ul>
      <li><b>Trimming:</b> Any leading or trailing wildcards are removed. For example, a pattern like <pre><code class="lang-csharp">"*a*b*"</code></pre> is treated as <pre><code class="lang-csharp">"a*b"</code></pre>.</li>
      <li><b>Collapsing:</b> Any consecutive wildcards are collapsed into a single one. For example, <pre><code class="lang-csharp">"a**b"</code></pre> is treated as <pre><code class="lang-csharp">"a*b"</code></pre>.</li>
    </ul>

    <br />

    <b>Performance Note:</b> Setting <code class="paramref">findShortest</code> to <code>false</code> can result in a very large number of matches and significantly impact performance, especially if intermediate parts (like 'b' in "a*b*c") are very common in the text.
  example: []
  syntax:
    content: public IEnumerable<FMIndex.MultiGappedMatch> LocateMultiGapped(ReadOnlySpan<char> pattern, bool findShortest = true, char wildcardA = '*', char wildcardQ = '?')
    parameters:
    - id: pattern
      type: System.ReadOnlySpan{System.Char}
      description: The pattern containing zero or more '*' wildcards.
    - id: findShortest
      type: System.Boolean
      description: >-
        When <code>true</code> (default), performs a "shortest" or "non-greedy" match. For each starting part, it finds the first possible chained match and stops. This is the fastest and most common use case.

        When <code>false</code>, finds all possible combinations of matches, which can be computationally expensive if the parts are common.
    - id: wildcardA
      type: System.Char
      description: Specifies the character to be treated as a multi-character wildcard. Defaults to '*'.
    - id: wildcardQ
      type: System.Char
      description: Specifies a character to be treated as a single-character wildcard. Defaults to '?'.
    return:
      type: System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch}
      description: An enumerable collection of <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch" data-throw-if-not-resolved="false"></xref> objects.
    content.vb: Public Function LocateMultiGapped(pattern As ReadOnlySpan(Of Char), findShortest As Boolean = True, wildcardA As Char = "*"c, wildcardQ As Char = "?"c) As IEnumerable(Of FMIndex.MultiGappedMatch)
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">wildcardA</code> equals <code class="paramref">wildcardQ</code>.
  nameWithType.vb: FMIndex.LocateMultiGapped(ReadOnlySpan(Of Char), Boolean, Char, Char)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped(System.ReadOnlySpan(Of Char), Boolean, Char, Char)
  name.vb: LocateMultiGapped(ReadOnlySpan(Of Char), Boolean, Char, Char)
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.RestoreSourceText
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.RestoreSourceText
  id: RestoreSourceText
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: RestoreSourceText()
  nameWithType: FMIndex.RestoreSourceText()
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.RestoreSourceText()
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: RestoreSourceText
    path: src/FMIndex.cs
    startLine: 983
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Reconstructs the original source text from the compressed index by inverting the Burrows-Wheeler Transform.
  example: []
  syntax:
    content: public string RestoreSourceText()
    return:
      type: System.String
      description: The original text that was used to create the index.
    content.vb: Public Function RestoreSourceText() As String
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.RestoreSourceText*
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet(System.Int32,System.Int32,System.Int32,System.Double)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet(System.Int32,System.Int32,System.Int32,System.Double)
  id: GetSnippet(System.Int32,System.Int32,System.Int32,System.Double)
  parent: BelNytheraSeiche.WaveletMatrix.FMIndex
  langs:
  - csharp
  - vb
  name: GetSnippet(int, int, int, double)
  nameWithType: FMIndex.GetSnippet(int, int, int, double)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet(int, int, int, double)
  type: Method
  source:
    remote:
      path: src/FMIndex.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: GetSnippet
    path: src/FMIndex.cs
    startLine: 1019
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Calculates the location and optionally extracts the content of a text snippet surrounding a specified position.
  remarks: >-
    In full Suffix Array mode, the <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Text" data-throw-if-not-resolved="false"></xref> property of the returned record will contain the extracted string.

    In sampling mode, the <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Text" data-throw-if-not-resolved="false"></xref> property will be <code>null</code>, but the location properties (<xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Index" data-throw-if-not-resolved="false"></xref>, <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Length" data-throw-if-not-resolved="false"></xref>, <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.KeyPosition" data-throw-if-not-resolved="false"></xref>)

    will be correctly calculated, allowing the caller to extract the snippet from their own copy of the source text.

    The specified <code class="paramref">leadingRatio</code> is a guideline. The method prioritizes returning a snippet of approximately

    <code class="paramref">totalLength</code>. If the keyword is near the start or end of the text, the actual ratio of leading/trailing

    context will be adjusted to fill the requested length.
  example: []
  syntax:
    content: public FMIndex.Snippet GetSnippet(int position, int keyLength, int totalLength, double leadingRatio = 0.5)
    parameters:
    - id: position
      type: System.Int32
      description: The zero-based starting position of the keyword in the original text.
    - id: keyLength
      type: System.Int32
      description: The length of the keyword.
    - id: totalLength
      type: System.Int32
      description: The desired total length of the snippet.
    - id: leadingRatio
      type: System.Double
      description: The desired proportion (0.0 to 1.0) of the context text to appear before the keyword. Defaults to 0.5 for centering the keyword.
    return:
      type: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet
      description: A <xref href="BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet" data-throw-if-not-resolved="false"></xref> record containing the location, length, and (in non-sampling mode) the text content of the snippet.
    content.vb: Public Function GetSnippet(position As Integer, keyLength As Integer, totalLength As Integer, leadingRatio As Double = 0.5) As FMIndex.Snippet
  overload: BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">position</code>, <code class="paramref">keyLength</code>, <code class="paramref">totalLength</code> are invalid, or if <code class="paramref">leadingRatio</code> is not between 0.0 and 1.0.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">position</code> + <code class="paramref">keyLength</code> is greater than the length of the text.
  nameWithType.vb: FMIndex.GetSnippet(Integer, Integer, Integer, Double)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet(Integer, Integer, Integer, Double)
  name.vb: GetSnippet(Integer, Integer, Integer, Double)
references:
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan{System.Char})
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan{System.Char})
  isExternal: true
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Count_System_ReadOnlySpan_System_Char__
  name: Count(ReadOnlySpan<char>)
  nameWithType: FMIndex.Count(ReadOnlySpan<char>)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan<char>)
  nameWithType.vb: FMIndex.Count(ReadOnlySpan(Of Char))
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan(Of Char))
  name.vb: Count(ReadOnlySpan(Of Char))
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan{System.Char})
    name: Count
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Count_System_ReadOnlySpan_System_Char__
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  - name: )
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Count(System.ReadOnlySpan{System.Char})
    name: Count
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Count_System_ReadOnlySpan_System_Char__
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  isExternal: true
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Locate_System_ReadOnlySpan_System_Char__BelNytheraSeiche_WaveletMatrix_SortOrder_
  name: Locate(ReadOnlySpan<char>, SortOrder)
  nameWithType: FMIndex.Locate(ReadOnlySpan<char>, SortOrder)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan<char>, BelNytheraSeiche.WaveletMatrix.SortOrder)
  nameWithType.vb: FMIndex.Locate(ReadOnlySpan(Of Char), SortOrder)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan(Of Char), BelNytheraSeiche.WaveletMatrix.SortOrder)
  name.vb: Locate(ReadOnlySpan(Of Char), SortOrder)
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
    name: Locate
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Locate_System_ReadOnlySpan_System_Char__BelNytheraSeiche_WaveletMatrix_SortOrder_
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  - name: ','
  - name: " "
  - uid: BelNytheraSeiche.WaveletMatrix.SortOrder
    name: SortOrder
    href: BelNytheraSeiche.WaveletMatrix.SortOrder.html
  - name: )
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate(System.ReadOnlySpan{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
    name: Locate
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Locate_System_ReadOnlySpan_System_Char__BelNytheraSeiche_WaveletMatrix_SortOrder_
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  - name: ','
  - name: " "
  - uid: BelNytheraSeiche.WaveletMatrix.SortOrder
    name: SortOrder
    href: BelNytheraSeiche.WaveletMatrix.SortOrder.html
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix
  commentId: N:BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.html
  name: BelNytheraSeiche.WaveletMatrix
  nameWithType: BelNytheraSeiche.WaveletMatrix
  fullName: BelNytheraSeiche.WaveletMatrix
  spec.csharp:
  - uid: BelNytheraSeiche
    name: BelNytheraSeiche
    href: BelNytheraSeiche.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix
    name: WaveletMatrix
    href: BelNytheraSeiche.WaveletMatrix.html
  spec.vb:
  - uid: BelNytheraSeiche
    name: BelNytheraSeiche
    href: BelNytheraSeiche.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix
    name: WaveletMatrix
    href: BelNytheraSeiche.WaveletMatrix.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.UniqueCharacters*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.UniqueCharacters
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_UniqueCharacters
  name: UniqueCharacters
  nameWithType: FMIndex.UniqueCharacters
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.UniqueCharacters
- uid: System.Collections.Generic.IEnumerable{System.Char}
  commentId: T:System.Collections.Generic.IEnumerable{System.Char}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<char>
  nameWithType: IEnumerable<char>
  fullName: System.Collections.Generic.IEnumerable<char>
  nameWithType.vb: IEnumerable(Of Char)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Char)
  name.vb: IEnumerable(Of Char)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_IsSampled
  name: IsSampled
  nameWithType: FMIndex.IsSampled
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Text*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.Text
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Text
  name: Text
  nameWithType: FMIndex.Text
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Text
- uid: System.ReadOnlyMemory{System.Char}
  commentId: T:System.ReadOnlyMemory{System.Char}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<char>
  nameWithType: ReadOnlyMemory<char>
  fullName: System.ReadOnlyMemory<char>
  nameWithType.vb: ReadOnlyMemory(Of Char)
  fullName.vb: System.ReadOnlyMemory(Of Char)
  name.vb: ReadOnlyMemory(Of Char)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.WM*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.WM
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_WM
  name: WM
  nameWithType: FMIndex.WM
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.WM
- uid: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric{System.Char}
  commentId: T:BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric{System.Char}
  parent: BelNytheraSeiche.WaveletMatrix
  definition: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric`1
  href: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric-1.html
  name: WaveletMatrixGeneric<char>
  nameWithType: WaveletMatrixGeneric<char>
  fullName: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric<char>
  nameWithType.vb: WaveletMatrixGeneric(Of Char)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric(Of Char)
  name.vb: WaveletMatrixGeneric(Of Char)
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric`1
    name: WaveletMatrixGeneric
    href: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric-1.html
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric`1
    name: WaveletMatrixGeneric
    href: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric`1
  commentId: T:BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric`1
  parent: BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric-1.html
  name: WaveletMatrixGeneric<T>
  nameWithType: WaveletMatrixGeneric<T>
  fullName: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric<T>
  nameWithType.vb: WaveletMatrixGeneric(Of T)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric(Of T)
  name.vb: WaveletMatrixGeneric(Of T)
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric`1
    name: WaveletMatrixGeneric
    href: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric`1
    name: WaveletMatrixGeneric
    href: BelNytheraSeiche.WaveletMatrix.WaveletMatrixGeneric-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.SA*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.SA
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_SA
  name: SA
  nameWithType: FMIndex.SA
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.SA
- uid: BelNytheraSeiche.WaveletMatrix.SuffixArray
  commentId: T:BelNytheraSeiche.WaveletMatrix.SuffixArray
  parent: BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.WaveletMatrix.SuffixArray.html
  name: SuffixArray
  nameWithType: SuffixArray
  fullName: BelNytheraSeiche.WaveletMatrix.SuffixArray
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_IsSampled
  name: IsSampled
  nameWithType: FMIndex.IsSampled
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.IsSampled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex
  commentId: T:BelNytheraSeiche.WaveletMatrix.FMIndex
  parent: BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  name: FMIndex
  nameWithType: FMIndex
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Create*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.Create
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Create_System_String_System_Int32_
  name: Create
  nameWithType: FMIndex.Create
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BelNytheraSeiche.WaveletMatrix.SerializationOptions.Default
  commentId: P:BelNytheraSeiche.WaveletMatrix.SerializationOptions.Default
  href: BelNytheraSeiche.WaveletMatrix.SerializationOptions.html#BelNytheraSeiche_WaveletMatrix_SerializationOptions_Default
  name: Default
  nameWithType: SerializationOptions.Default
  fullName: BelNytheraSeiche.WaveletMatrix.SerializationOptions.Default
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Serialize_BelNytheraSeiche_WaveletMatrix_FMIndex_BelNytheraSeiche_WaveletMatrix_SerializationOptions_
  name: Serialize
  nameWithType: FMIndex.Serialize
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Serialize
- uid: BelNytheraSeiche.WaveletMatrix.SerializationOptions
  commentId: T:BelNytheraSeiche.WaveletMatrix.SerializationOptions
  parent: BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.WaveletMatrix.SerializationOptions.html
  name: SerializationOptions
  nameWithType: SerializationOptions
  fullName: BelNytheraSeiche.WaveletMatrix.SerializationOptions
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Deserialize_System_Byte___
  name: Deserialize
  nameWithType: FMIndex.Deserialize
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Deserialize
- uid: System.IO.InvalidDataException
  commentId: T:System.IO.InvalidDataException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.invaliddataexception
  name: InvalidDataException
  nameWithType: InvalidDataException
  fullName: System.IO.InvalidDataException
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Contains*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.Contains
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Contains_System_ReadOnlySpan_System_Char__
  name: Contains
  nameWithType: FMIndex.Contains
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Contains
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_FindFirst_System_ReadOnlySpan_System_Char__
  name: FindFirst
  nameWithType: FMIndex.FindFirst
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.FindFirst
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Count*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.Count
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Count_System_ReadOnlySpan_System_Char__
  name: Count
  nameWithType: FMIndex.Count
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Count
- uid: BelNytheraSeiche.WaveletMatrix.SortOrder.Ascending
  commentId: F:BelNytheraSeiche.WaveletMatrix.SortOrder.Ascending
  href: BelNytheraSeiche.WaveletMatrix.SortOrder.html#BelNytheraSeiche_WaveletMatrix_SortOrder_Ascending
  name: Ascending
  nameWithType: SortOrder.Ascending
  fullName: BelNytheraSeiche.WaveletMatrix.SortOrder.Ascending
- uid: BelNytheraSeiche.WaveletMatrix.SortOrder.Descending
  commentId: F:BelNytheraSeiche.WaveletMatrix.SortOrder.Descending
  href: BelNytheraSeiche.WaveletMatrix.SortOrder.html#BelNytheraSeiche_WaveletMatrix_SortOrder_Descending
  name: Descending
  nameWithType: SortOrder.Descending
  fullName: BelNytheraSeiche.WaveletMatrix.SortOrder.Descending
- uid: BelNytheraSeiche.WaveletMatrix.SortOrder.Unordered
  commentId: F:BelNytheraSeiche.WaveletMatrix.SortOrder.Unordered
  href: BelNytheraSeiche.WaveletMatrix.SortOrder.html#BelNytheraSeiche_WaveletMatrix_SortOrder_Unordered
  name: Unordered
  nameWithType: SortOrder.Unordered
  fullName: BelNytheraSeiche.WaveletMatrix.SortOrder.Unordered
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.Locate
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Locate_System_ReadOnlySpan_System_Char__BelNytheraSeiche_WaveletMatrix_SortOrder_
  name: Locate
  nameWithType: FMIndex.Locate
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Locate
- uid: BelNytheraSeiche.WaveletMatrix.SortOrder
  commentId: T:BelNytheraSeiche.WaveletMatrix.SortOrder
  parent: BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.WaveletMatrix.SortOrder.html
  name: SortOrder
  nameWithType: SortOrder
  fullName: BelNytheraSeiche.WaveletMatrix.SortOrder
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<int>
  nameWithType: IEnumerable<int>
  fullName: System.Collections.Generic.IEnumerable<int>
  nameWithType.vb: IEnumerable(Of Integer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Integer)
  name.vb: IEnumerable(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch
  commentId: T:BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  name: FMIndex.FuzzyMatch
  nameWithType: FMIndex.FuzzyMatch
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch
    name: FuzzyMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch.html
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch
    name: FuzzyMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch.html
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_LocateFuzzy_System_ReadOnlySpan_System_Char__System_Int32_System_Boolean_System_Boolean_System_Nullable_System_Char__BelNytheraSeiche_WaveletMatrix_SortOrder_
  name: LocateFuzzy
  nameWithType: FMIndex.LocateFuzzy
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy
- uid: System.Nullable{System.Char}
  commentId: T:System.Nullable{System.Char}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char?
  nameWithType: char?
  fullName: char?
  nameWithType.vb: Char?
  fullName.vb: Char?
  name.vb: Char?
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '?'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '?'
- uid: System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch}
  commentId: T:System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FMIndex.FuzzyMatch>
  nameWithType: IEnumerable<FMIndex.FuzzyMatch>
  fullName: System.Collections.Generic.IEnumerable<BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch>
  nameWithType.vb: IEnumerable(Of FMIndex.FuzzyMatch)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch)
  name.vb: IEnumerable(Of FMIndex.FuzzyMatch)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch
    name: FuzzyMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch
    name: FuzzyMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.FuzzyMatch.html
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan{System.Char},System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  commentId: M:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan{System.Char},System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
  isExternal: true
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_LocateFuzzy_System_ReadOnlySpan_System_Char__System_Int32_System_Boolean_System_Boolean_System_Nullable_System_Char__BelNytheraSeiche_WaveletMatrix_SortOrder_
  name: LocateFuzzy(ReadOnlySpan<char>, int, bool, bool, char?, SortOrder)
  nameWithType: FMIndex.LocateFuzzy(ReadOnlySpan<char>, int, bool, bool, char?, SortOrder)
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan<char>, int, bool, bool, char?, BelNytheraSeiche.WaveletMatrix.SortOrder)
  nameWithType.vb: FMIndex.LocateFuzzy(ReadOnlySpan(Of Char), Integer, Boolean, Boolean, Char?, SortOrder)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan(Of Char), Integer, Boolean, Boolean, Char?, BelNytheraSeiche.WaveletMatrix.SortOrder)
  name.vb: LocateFuzzy(ReadOnlySpan(Of Char), Integer, Boolean, Boolean, Char?, SortOrder)
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan{System.Char},System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
    name: LocateFuzzy
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_LocateFuzzy_System_ReadOnlySpan_System_Char__System_Int32_System_Boolean_System_Boolean_System_Nullable_System_Char__BelNytheraSeiche_WaveletMatrix_SortOrder_
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '?'
  - name: ','
  - name: " "
  - uid: BelNytheraSeiche.WaveletMatrix.SortOrder
    name: SortOrder
    href: BelNytheraSeiche.WaveletMatrix.SortOrder.html
  - name: )
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateFuzzy(System.ReadOnlySpan{System.Char},System.Int32,System.Boolean,System.Boolean,System.Nullable{System.Char},BelNytheraSeiche.WaveletMatrix.SortOrder)
    name: LocateFuzzy
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_LocateFuzzy_System_ReadOnlySpan_System_Char__System_Int32_System_Boolean_System_Boolean_System_Nullable_System_Char__BelNytheraSeiche_WaveletMatrix_SortOrder_
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '?'
  - name: ','
  - name: " "
  - uid: BelNytheraSeiche.WaveletMatrix.SortOrder
    name: SortOrder
    href: BelNytheraSeiche.WaveletMatrix.SortOrder.html
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_LocateWildcard_System_ReadOnlySpan_System_Char__System_Char_BelNytheraSeiche_WaveletMatrix_SortOrder_
  name: LocateWildcard
  nameWithType: FMIndex.LocateWildcard
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateWildcard
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch
  commentId: T:BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  name: FMIndex.SingleGappedMatch
  nameWithType: FMIndex.SingleGappedMatch
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch
    name: SingleGappedMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch.html
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch
    name: SingleGappedMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch.html
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_LocateSingleGapped_System_ReadOnlySpan_System_Char__System_Char_System_Char_
  name: LocateSingleGapped
  nameWithType: FMIndex.LocateSingleGapped
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateSingleGapped
- uid: System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch}
  commentId: T:System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FMIndex.SingleGappedMatch>
  nameWithType: IEnumerable<FMIndex.SingleGappedMatch>
  fullName: System.Collections.Generic.IEnumerable<BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch>
  nameWithType.vb: IEnumerable(Of FMIndex.SingleGappedMatch)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch)
  name.vb: IEnumerable(Of FMIndex.SingleGappedMatch)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch
    name: SingleGappedMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch
    name: SingleGappedMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.SingleGappedMatch.html
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch
  commentId: T:BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  name: FMIndex.MultiGappedMatch
  nameWithType: FMIndex.MultiGappedMatch
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch
    name: MultiGappedMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch.html
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch
    name: MultiGappedMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch.html
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_LocateMultiGapped_System_ReadOnlySpan_System_Char__System_Boolean_System_Char_System_Char_
  name: LocateMultiGapped
  nameWithType: FMIndex.LocateMultiGapped
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.LocateMultiGapped
- uid: System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch}
  commentId: T:System.Collections.Generic.IEnumerable{BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FMIndex.MultiGappedMatch>
  nameWithType: IEnumerable<FMIndex.MultiGappedMatch>
  fullName: System.Collections.Generic.IEnumerable<BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch>
  nameWithType.vb: IEnumerable(Of FMIndex.MultiGappedMatch)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch)
  name.vb: IEnumerable(Of FMIndex.MultiGappedMatch)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch
    name: MultiGappedMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch
    name: MultiGappedMatch
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.MultiGappedMatch.html
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.RestoreSourceText*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.RestoreSourceText
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_RestoreSourceText
  name: RestoreSourceText
  nameWithType: FMIndex.RestoreSourceText
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.RestoreSourceText
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet
  commentId: T:BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet
  parent: BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  name: FMIndex.Snippet
  nameWithType: FMIndex.Snippet
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet
    name: Snippet
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.html
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex
    name: FMIndex
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet
    name: Snippet
    href: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.html
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Text
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Text
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Snippet_Text
  name: Text
  nameWithType: FMIndex.Snippet.Text
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Text
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Index
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Index
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Snippet_Index
  name: Index
  nameWithType: FMIndex.Snippet.Index
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Index
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Length
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Length
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Snippet_Length
  name: Length
  nameWithType: FMIndex.Snippet.Length
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.Length
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.KeyPosition
  commentId: P:BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.KeyPosition
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.html#BelNytheraSeiche_WaveletMatrix_FMIndex_Snippet_KeyPosition
  name: KeyPosition
  nameWithType: FMIndex.Snippet.KeyPosition
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.Snippet.KeyPosition
- uid: BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet
  href: BelNytheraSeiche.WaveletMatrix.FMIndex.html#BelNytheraSeiche_WaveletMatrix_FMIndex_GetSnippet_System_Int32_System_Int32_System_Int32_System_Double_
  name: GetSnippet
  nameWithType: FMIndex.GetSnippet
  fullName: BelNytheraSeiche.WaveletMatrix.FMIndex.GetSnippet
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
