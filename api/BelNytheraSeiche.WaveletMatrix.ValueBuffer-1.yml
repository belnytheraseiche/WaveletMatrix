### YamlMime:ManagedReference
items:
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  commentId: T:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  id: ValueBuffer`1
  parent: BelNytheraSeiche.WaveletMatrix
  children:
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.#ctor(System.Int32,System.Boolean)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Add(`0)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.AppendChunkDirectly(`0[])
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Capacity
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Clear
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Contains(`0)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.CopyTo(`0[],System.Int32)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Count
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ElementsPerChunk
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.EnumerateChunks
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendAutomatically
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendCapacity(System.Int32)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Fill(`0,System.Int32,System.Int32)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.GetEnumerator
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.IsReadOnly
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Item(System.Int32)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.NumberOfChunks
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Remove(`0)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.SetUsedDirectly(System.Int32,System.Boolean)
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ToArray
  - BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Used
  langs:
  - csharp
  - vb
  name: ValueBuffer<T>
  nameWithType: ValueBuffer<T>
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>
  type: Class
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: ValueBuffer
    path: src/ValueBuffer.cs
    startLine: 36
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Represents a buffer for value types, implemented using a list of array chunks.
  remarks: >-
    This class is designed to manage large collections of value types without allocating on the Large Object Heap (LOH).

    It achieves this by storing elements in a series of smaller array "chunks". The size of these chunks, specified by <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.ElementsPerChunk" data-throw-if-not-resolved="false"></xref>, must be a power of 2.
  example: []
  syntax:
    content: 'public sealed class ValueBuffer<T> : ICollection<T>, IEnumerable<T>, IEnumerable where T : struct'
    typeParameters:
    - id: T
      description: The type of element, which must be a struct.
    content.vb: Public NotInheritable Class ValueBuffer(Of T As Structure) Implements ICollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ValueBuffer(Of T)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T)
  name.vb: ValueBuffer(Of T)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ElementsPerChunk
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ElementsPerChunk
  id: ElementsPerChunk
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: ElementsPerChunk
  nameWithType: ValueBuffer<T>.ElementsPerChunk
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ElementsPerChunk
  type: Property
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: ElementsPerChunk
    path: src/ValueBuffer.cs
    startLine: 41
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets the size of each internal array chunk.
  example: []
  syntax:
    content: public int ElementsPerChunk { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ElementsPerChunk As Integer
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ElementsPerChunk*
  nameWithType.vb: ValueBuffer(Of T).ElementsPerChunk
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ElementsPerChunk
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.NumberOfChunks
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.NumberOfChunks
  id: NumberOfChunks
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: NumberOfChunks
  nameWithType: ValueBuffer<T>.NumberOfChunks
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.NumberOfChunks
  type: Property
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: NumberOfChunks
    path: src/ValueBuffer.cs
    startLine: 45
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets the number of internal array chunks that are currently allocated.
  example: []
  syntax:
    content: public int NumberOfChunks { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumberOfChunks As Integer
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.NumberOfChunks*
  nameWithType.vb: ValueBuffer(Of T).NumberOfChunks
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).NumberOfChunks
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Used
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Used
  id: Used
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: Used
  nameWithType: ValueBuffer<T>.Used
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Used
  type: Property
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Used
    path: src/ValueBuffer.cs
    startLine: 50
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Gets the number of elements that are considered to be in use within the buffer.

    This value is updated when an element is written to an index greater than the current used count.
  example: []
  syntax:
    content: public int Used { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Used As Integer
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Used*
  nameWithType.vb: ValueBuffer(Of T).Used
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Used
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Capacity
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Capacity
  id: Capacity
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: Capacity
  nameWithType: ValueBuffer<T>.Capacity
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Capacity
  type: Property
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Capacity
    path: src/ValueBuffer.cs
    startLine: 54
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets the total number of elements that can be stored across all currently allocated chunks.
  example: []
  syntax:
    content: public int Capacity { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Capacity As Integer
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Capacity*
  nameWithType.vb: ValueBuffer(Of T).Capacity
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Capacity
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendAutomatically
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendAutomatically
  id: ExtendAutomatically
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: ExtendAutomatically
  nameWithType: ValueBuffer<T>.ExtendAutomatically
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ExtendAutomatically
  type: Property
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: ExtendAutomatically
    path: src/ValueBuffer.cs
    startLine: 58
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets a value indicating whether the buffer will automatically allocate new chunks when an index outside the current capacity is accessed.
  example: []
  syntax:
    content: public bool ExtendAutomatically { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ExtendAutomatically As Boolean
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendAutomatically*
  nameWithType.vb: ValueBuffer(Of T).ExtendAutomatically
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ExtendAutomatically
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Count
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Count
  id: Count
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ValueBuffer<T>.Count
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Count
  type: Property
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Count
    path: src/ValueBuffer.cs
    startLine: 63
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Gets the number of elements contained in the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref>.

    This property is an implementation for the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> interface and is an alias for the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.Used" data-throw-if-not-resolved="false"></xref> property.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  nameWithType.vb: ValueBuffer(Of T).Count
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Count
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.IsReadOnly
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.IsReadOnly
  id: IsReadOnly
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ValueBuffer<T>.IsReadOnly
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: IsReadOnly
    path: src/ValueBuffer.cs
    startLine: 67
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets a value indicating whether the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref> is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  nameWithType.vb: ValueBuffer(Of T).IsReadOnly
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).IsReadOnly
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Item(System.Int32)
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: ValueBuffer<T>.this[int]
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.this[int]
  type: Property
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: this[]
    path: src/ValueBuffer.cs
    startLine: 81
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets or sets the element at the specified index.
  remarks: >-
    Accessing an index greater than or equal to the current <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.Used" data-throw-if-not-resolved="false"></xref> count will update the count to <code>index + 1</code>.

    If <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.ExtendAutomatically" data-throw-if-not-resolved="false"></xref> is true, accessing an index beyond the current <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.Capacity" data-throw-if-not-resolved="false"></xref> will allocate new chunks.
  example: []
  syntax:
    content: public ref T this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: '{T}'
      description: A reference to the element at the specified index.
    content.vb: Public ReadOnly Default ByRef Property this[](index As Integer) As T
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">index</code> is negative, or if <code class="paramref">index</code> is greater than or equal to <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.Capacity" data-throw-if-not-resolved="false"></xref> and <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.ExtendAutomatically" data-throw-if-not-resolved="false"></xref> is false.
  nameWithType.vb: ValueBuffer(Of T).this[](Integer)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).this[](Integer)
  name.vb: this[](Integer)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.#ctor(System.Int32,System.Boolean)
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: ValueBuffer(int, bool)
  nameWithType: ValueBuffer<T>.ValueBuffer(int, bool)
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ValueBuffer(int, bool)
  type: Constructor
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: .ctor
    path: src/ValueBuffer.cs
    startLine: 123
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Initializes a new instance of the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ValueBuffer(int elementsPerChunk, bool extendAutomatically = false)
    parameters:
    - id: elementsPerChunk
      type: System.Int32
      description: The size of each internal array chunk. This value must be a power of 2.
    - id: extendAutomatically
      type: System.Boolean
      description: A value indicating whether to automatically extend the buffer's capacity when an out-of-bounds index is accessed.
    content.vb: Public Sub New(elementsPerChunk As Integer, extendAutomatically As Boolean = False)
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">elementsPerChunk</code> is not positive.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">elementsPerChunk</code> is not a power of 2.
  nameWithType.vb: ValueBuffer(Of T).New(Integer, Boolean)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).New(Integer, Boolean)
  name.vb: New(Integer, Boolean)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ToArray
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ToArray
  id: ToArray
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: ValueBuffer<T>.ToArray()
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ToArray()
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: ToArray
    path: src/ValueBuffer.cs
    startLine: 143
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Copies the used elements from the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref> to a new, single contiguous array.
  example: []
  syntax:
    content: public T[] ToArray()
    return:
      type: '{T}[]'
      description: A new array containing the elements from the buffer.
    content.vb: Public Function ToArray() As T()
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ToArray*
  nameWithType.vb: ValueBuffer(Of T).ToArray()
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ToArray()
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Clear
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Clear
  id: Clear
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ValueBuffer<T>.Clear()
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Clear()
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Clear
    path: src/ValueBuffer.cs
    startLine: 154
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Removes all elements from the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref> and releases all internal array chunks.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Clear*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: ValueBuffer(Of T).Clear()
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Clear()
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Add(`0)
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Add(`0)
  id: Add(`0)
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: ValueBuffer<T>.Add(T)
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Add
    path: src/ValueBuffer.cs
    startLine: 164
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Adds an element to the end of the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(T value)
    parameters:
    - id: value
      type: '{T}'
      description: The element to add.
    content.vb: Public Sub Add(value As T)
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Add*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: ValueBuffer(Of T).Add(T)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Add(T)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendCapacity(System.Int32)
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendCapacity(System.Int32)
  id: ExtendCapacity(System.Int32)
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: ExtendCapacity(int)
  nameWithType: ValueBuffer<T>.ExtendCapacity(int)
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ExtendCapacity(int)
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: ExtendCapacity
    path: src/ValueBuffer.cs
    startLine: 173
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Ensures that the capacity of this buffer is at least the specified value.
  example: []
  syntax:
    content: public int ExtendCapacity(int minCapacity)
    parameters:
    - id: minCapacity
      type: System.Int32
      description: The minimum required capacity.
    return:
      type: System.Int32
      description: The new capacity of the buffer, which will be a multiple of <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.ElementsPerChunk" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ExtendCapacity(minCapacity As Integer) As Integer
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendCapacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">minCapacity</code> is negative.
  nameWithType.vb: ValueBuffer(Of T).ExtendCapacity(Integer)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ExtendCapacity(Integer)
  name.vb: ExtendCapacity(Integer)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.EnumerateChunks
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.EnumerateChunks
  id: EnumerateChunks
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: EnumerateChunks()
  nameWithType: ValueBuffer<T>.EnumerateChunks()
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.EnumerateChunks()
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: EnumerateChunks
    path: src/ValueBuffer.cs
    startLine: 194
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Returns an enumerable collection of the internal array chunks.
  remarks: This method is intended for advanced scenarios where direct read-only access to the underlying chunks is required.
  example: []
  syntax:
    content: public IEnumerable<T[]> EnumerateChunks()
    return:
      type: System.Collections.Generic.IEnumerable{{T}[]}
      description: An <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> (<code class="typeparamref">T</code> is an array) that allows iteration over the raw internal buffers.
    content.vb: Public Function EnumerateChunks() As IEnumerable(Of T())
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.EnumerateChunks*
  nameWithType.vb: ValueBuffer(Of T).EnumerateChunks()
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).EnumerateChunks()
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.AppendChunkDirectly(`0[])
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.AppendChunkDirectly(`0[])
  id: AppendChunkDirectly(`0[])
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: AppendChunkDirectly(T[])
  nameWithType: ValueBuffer<T>.AppendChunkDirectly(T[])
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.AppendChunkDirectly(T[])
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: AppendChunkDirectly
    path: src/ValueBuffer.cs
    startLine: 204
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Appends a pre-allocated array chunk directly to the internal list of buffers, increasing the capacity.
  remarks: This is an advanced optimization method that avoids an array allocation and copy by using a caller-provided array.
  example: []
  syntax:
    content: public void AppendChunkDirectly(T[] chunk)
    parameters:
    - id: chunk
      type: '{T}[]'
      description: The array to append. Its length must be exactly equal to <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.ElementsPerChunk" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub AppendChunkDirectly(chunk As T())
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.AppendChunkDirectly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">chunk</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The length of <code class="paramref">chunk</code> is not equal to <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.ElementsPerChunk" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: ValueBuffer(Of T).AppendChunkDirectly(T())
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).AppendChunkDirectly(T())
  name.vb: AppendChunkDirectly(T())
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.SetUsedDirectly(System.Int32,System.Boolean)
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.SetUsedDirectly(System.Int32,System.Boolean)
  id: SetUsedDirectly(System.Int32,System.Boolean)
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: SetUsedDirectly(int, bool)
  nameWithType: ValueBuffer<T>.SetUsedDirectly(int, bool)
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.SetUsedDirectly(int, bool)
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: SetUsedDirectly
    path: src/ValueBuffer.cs
    startLine: 228
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Directly sets the number of used elements and optionally shrinks the buffer's capacity.
  remarks: This is an advanced method and should be used with caution. Setting an incorrect value can lead to an inconsistent state or data corruption.
  example: []
  syntax:
    content: public void SetUsedDirectly(int used, bool shrinkAutomatically = false)
    parameters:
    - id: used
      type: System.Int32
      description: The new count of used elements. This value must be between 0 and <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.Capacity" data-throw-if-not-resolved="false"></xref>.
    - id: shrinkAutomatically
      type: System.Boolean
      description: If true, deallocates unused array chunks from the end of the buffer to fit the new used count.
    content.vb: Public Sub SetUsedDirectly(used As Integer, shrinkAutomatically As Boolean = False)
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.SetUsedDirectly*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">used</code> is negative or greater than <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.Capacity" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: ValueBuffer(Of T).SetUsedDirectly(Integer, Boolean)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).SetUsedDirectly(Integer, Boolean)
  name.vb: SetUsedDirectly(Integer, Boolean)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Fill(`0,System.Int32,System.Int32)
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Fill(`0,System.Int32,System.Int32)
  id: Fill(`0,System.Int32,System.Int32)
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: Fill(T, int, int)
  nameWithType: ValueBuffer<T>.Fill(T, int, int)
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Fill(T, int, int)
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Fill
    path: src/ValueBuffer.cs
    startLine: 261
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Fills a range of elements in the buffer with a specified value.
  example: []
  syntax:
    content: public void Fill(T value, int index, int count)
    parameters:
    - id: value
      type: '{T}'
      description: The value to assign to each element in the range.
    - id: index
      type: System.Int32
      description: The zero-based starting index of the range to fill.
    - id: count
      type: System.Int32
      description: The number of elements in the range to fill.
    content.vb: Public Sub Fill(value As T, index As Integer, count As Integer)
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Fill*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> or <code class="paramref">count</code> is negative.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The sum of <code class="paramref">index</code> and <code class="paramref">count</code> is greater than the buffer's capacity and <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.ExtendAutomatically" data-throw-if-not-resolved="false"></xref> is false.
  nameWithType.vb: ValueBuffer(Of T).Fill(T, Integer, Integer)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Fill(T, Integer, Integer)
  name.vb: Fill(T, Integer, Integer)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.GetEnumerator
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.GetEnumerator
  id: GetEnumerator
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ValueBuffer<T>.GetEnumerator()
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: GetEnumerator
    path: src/ValueBuffer.cs
    startLine: 301
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Returns an enumerator that iterates through the used elements in the buffer.
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: An enumerator for the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: ValueBuffer(Of T).GetEnumerator()
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).GetEnumerator()
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Contains(`0)
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Contains(`0)
  id: Contains(`0)
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: ValueBuffer<T>.Contains(T)
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Contains(T)
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Contains
    path: src/ValueBuffer.cs
    startLine: 315
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Determines whether the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref> contains a specific value.
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if item is found in the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref>; otherwise, false.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: ValueBuffer(Of T).Contains(T)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Contains(T)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.CopyTo(`0[],System.Int32)
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: ValueBuffer<T>.CopyTo(T[], int)
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.CopyTo(T[], int)
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: CopyTo
    path: src/ValueBuffer.cs
    startLine: 331
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Copies the elements of the <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref> to an <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at a particular <xref href="System.Array" data-throw-if-not-resolved="false"></xref> index.
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
      description: The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601" data-throw-if-not-resolved="false"></xref>.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <code class="paramref">array</code> at which copying begins.
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">array</code> is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">arrayIndex</code> is less than 0.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The number of elements in the source buffer is greater than the available space from <code class="paramref">arrayIndex</code> to the end of the destination <code class="paramref">array</code>.
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: ValueBuffer(Of T).CopyTo(T(), Integer)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Remove(`0)
  commentId: M:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Remove(`0)
  id: Remove(`0)
  parent: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: ValueBuffer<T>.Remove(T)
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Remove(T)
  type: Method
  source:
    remote:
      path: src/ValueBuffer.cs
      branch: main
      repo: https://github.com/belnytheraseiche/WaveletMatrix.git
    id: Remove
    path: src/ValueBuffer.cs
    startLine: 359
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Finds the first occurrence of an item and replaces it with the default value of type <code class="typeparamref">T</code>.
  remarks: >-
    This method does not actually remove the element in a way that would shift subsequent elements. It only overwrites the found element with <code>default(T)</code>.

    The <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.Count" data-throw-if-not-resolved="false"></xref> and <xref href="BelNytheraSeiche.WaveletMatrix.ValueBuffer%601.Used" data-throw-if-not-resolved="false"></xref> properties are not changed by this operation.
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The item to locate and replace.
    return:
      type: System.Boolean
      description: true if the item was found and replaced; otherwise, false.
    content.vb: Public Function Remove(item As T) As Boolean
  overload: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Remove*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: ValueBuffer(Of T).Remove(T)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Remove(T)
references:
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ElementsPerChunk
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ElementsPerChunk
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_ElementsPerChunk
  name: ElementsPerChunk
  nameWithType: ValueBuffer<T>.ElementsPerChunk
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ElementsPerChunk
  nameWithType.vb: ValueBuffer(Of T).ElementsPerChunk
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ElementsPerChunk
- uid: BelNytheraSeiche.WaveletMatrix
  commentId: N:BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.html
  name: BelNytheraSeiche.WaveletMatrix
  nameWithType: BelNytheraSeiche.WaveletMatrix
  fullName: BelNytheraSeiche.WaveletMatrix
  spec.csharp:
  - uid: BelNytheraSeiche
    name: BelNytheraSeiche
    href: BelNytheraSeiche.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix
    name: WaveletMatrix
    href: BelNytheraSeiche.WaveletMatrix.html
  spec.vb:
  - uid: BelNytheraSeiche
    name: BelNytheraSeiche
    href: BelNytheraSeiche.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix
    name: WaveletMatrix
    href: BelNytheraSeiche.WaveletMatrix.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ElementsPerChunk*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ElementsPerChunk
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_ElementsPerChunk
  name: ElementsPerChunk
  nameWithType: ValueBuffer<T>.ElementsPerChunk
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ElementsPerChunk
  nameWithType.vb: ValueBuffer(Of T).ElementsPerChunk
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ElementsPerChunk
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.NumberOfChunks*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.NumberOfChunks
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_NumberOfChunks
  name: NumberOfChunks
  nameWithType: ValueBuffer<T>.NumberOfChunks
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.NumberOfChunks
  nameWithType.vb: ValueBuffer(Of T).NumberOfChunks
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).NumberOfChunks
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Used*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Used
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Used
  name: Used
  nameWithType: ValueBuffer<T>.Used
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Used
  nameWithType.vb: ValueBuffer(Of T).Used
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Used
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Capacity*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Capacity
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Capacity
  name: Capacity
  nameWithType: ValueBuffer<T>.Capacity
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Capacity
  nameWithType.vb: ValueBuffer(Of T).Capacity
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Capacity
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendAutomatically*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendAutomatically
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_ExtendAutomatically
  name: ExtendAutomatically
  nameWithType: ValueBuffer<T>.ExtendAutomatically
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ExtendAutomatically
  nameWithType.vb: ValueBuffer(Of T).ExtendAutomatically
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ExtendAutomatically
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  commentId: T:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html
  name: ValueBuffer<T>
  nameWithType: ValueBuffer<T>
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>
  nameWithType.vb: ValueBuffer(Of T)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T)
  name.vb: ValueBuffer(Of T)
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
    name: ValueBuffer
    href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1
    name: ValueBuffer
    href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Used
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Used
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Used
  name: Used
  nameWithType: ValueBuffer<T>.Used
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Used
  nameWithType.vb: ValueBuffer(Of T).Used
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Used
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Count*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Count
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Count
  name: Count
  nameWithType: ValueBuffer<T>.Count
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Count
  nameWithType.vb: ValueBuffer(Of T).Count
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.IsReadOnly*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.IsReadOnly
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_IsReadOnly
  name: IsReadOnly
  nameWithType: ValueBuffer<T>.IsReadOnly
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.IsReadOnly
  nameWithType.vb: ValueBuffer(Of T).IsReadOnly
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendAutomatically
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendAutomatically
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_ExtendAutomatically
  name: ExtendAutomatically
  nameWithType: ValueBuffer<T>.ExtendAutomatically
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ExtendAutomatically
  nameWithType.vb: ValueBuffer(Of T).ExtendAutomatically
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ExtendAutomatically
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Capacity
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Capacity
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Capacity
  name: Capacity
  nameWithType: ValueBuffer<T>.Capacity
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Capacity
  nameWithType.vb: ValueBuffer(Of T).Capacity
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Capacity
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Item*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Item
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Item_System_Int32_
  name: this
  nameWithType: ValueBuffer<T>.this
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.this
  nameWithType.vb: ValueBuffer(Of T).this[]
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).this[]
  name.vb: this[]
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.#ctor*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.#ctor
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1__ctor_System_Int32_System_Boolean_
  name: ValueBuffer
  nameWithType: ValueBuffer<T>.ValueBuffer
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ValueBuffer
  nameWithType.vb: ValueBuffer(Of T).New
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).New
  name.vb: New
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ToArray*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ToArray
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_ToArray
  name: ToArray
  nameWithType: ValueBuffer<T>.ToArray
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ToArray
  nameWithType.vb: ValueBuffer(Of T).ToArray
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ToArray
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Clear*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Clear
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Clear
  name: Clear
  nameWithType: ValueBuffer<T>.Clear
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Clear
  nameWithType.vb: ValueBuffer(Of T).Clear
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Add*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Add
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Add__0_
  name: Add
  nameWithType: ValueBuffer<T>.Add
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Add
  nameWithType.vb: ValueBuffer(Of T).Add
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendCapacity*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.ExtendCapacity
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_ExtendCapacity_System_Int32_
  name: ExtendCapacity
  nameWithType: ValueBuffer<T>.ExtendCapacity
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.ExtendCapacity
  nameWithType.vb: ValueBuffer(Of T).ExtendCapacity
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).ExtendCapacity
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.EnumerateChunks*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.EnumerateChunks
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_EnumerateChunks
  name: EnumerateChunks
  nameWithType: ValueBuffer<T>.EnumerateChunks
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.EnumerateChunks
  nameWithType.vb: ValueBuffer(Of T).EnumerateChunks
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).EnumerateChunks
- uid: System.Collections.Generic.IEnumerable{{T}[]}
  commentId: T:System.Collections.Generic.IEnumerable{`0[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T[]>
  nameWithType: IEnumerable<T[]>
  fullName: System.Collections.Generic.IEnumerable<T[]>
  nameWithType.vb: IEnumerable(Of T())
  fullName.vb: System.Collections.Generic.IEnumerable(Of T())
  name.vb: IEnumerable(Of T())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.AppendChunkDirectly*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.AppendChunkDirectly
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_AppendChunkDirectly__0___
  name: AppendChunkDirectly
  nameWithType: ValueBuffer<T>.AppendChunkDirectly
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.AppendChunkDirectly
  nameWithType.vb: ValueBuffer(Of T).AppendChunkDirectly
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).AppendChunkDirectly
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.SetUsedDirectly*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.SetUsedDirectly
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_SetUsedDirectly_System_Int32_System_Boolean_
  name: SetUsedDirectly
  nameWithType: ValueBuffer<T>.SetUsedDirectly
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.SetUsedDirectly
  nameWithType.vb: ValueBuffer(Of T).SetUsedDirectly
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).SetUsedDirectly
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Fill*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Fill
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Fill__0_System_Int32_System_Int32_
  name: Fill
  nameWithType: ValueBuffer<T>.Fill
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Fill
  nameWithType.vb: ValueBuffer(Of T).Fill
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Fill
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.GetEnumerator*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.GetEnumerator
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_GetEnumerator
  name: GetEnumerator
  nameWithType: ValueBuffer<T>.GetEnumerator
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.GetEnumerator
  nameWithType.vb: ValueBuffer(Of T).GetEnumerator
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Contains*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Contains
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Contains__0_
  name: Contains
  nameWithType: ValueBuffer<T>.Contains
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Contains
  nameWithType.vb: ValueBuffer(Of T).Contains
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Array
  commentId: T:System.Array
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.array
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.CopyTo*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.CopyTo
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: ValueBuffer<T>.CopyTo
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.CopyTo
  nameWithType.vb: ValueBuffer(Of T).CopyTo
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Count
  commentId: P:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Count
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Count
  name: Count
  nameWithType: ValueBuffer<T>.Count
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Count
  nameWithType.vb: ValueBuffer(Of T).Count
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Count
- uid: BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Remove*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.ValueBuffer`1.Remove
  href: BelNytheraSeiche.WaveletMatrix.ValueBuffer-1.html#BelNytheraSeiche_WaveletMatrix_ValueBuffer_1_Remove__0_
  name: Remove
  nameWithType: ValueBuffer<T>.Remove
  fullName: BelNytheraSeiche.WaveletMatrix.ValueBuffer<T>.Remove
  nameWithType.vb: ValueBuffer(Of T).Remove
  fullName.vb: BelNytheraSeiche.WaveletMatrix.ValueBuffer(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
