### YamlMime:ManagedReference
items:
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1
  commentId: T:BelNytheraSeiche.WaveletMatrix.SparseTable`1
  id: SparseTable`1
  parent: BelNytheraSeiche.WaveletMatrix
  children:
  - BelNytheraSeiche.WaveletMatrix.SparseTable`1.#ctor(System.ReadOnlySpan{`0},System.Func{`0,`0,System.Boolean})
  - BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query
  - BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query(System.Int32,System.Int32)
  - BelNytheraSeiche.WaveletMatrix.SparseTable`1.Size
  langs:
  - csharp
  - vb
  name: SparseTable<T>
  nameWithType: SparseTable<T>
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>
  type: Class
  source:
    id: SparseTable
    path: C:\Users\nanto\dev\WaveletMatrix\src\SparseTable.cs
    startLine: 34
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Provides a data structure for answering range queries on a static array in O(1) time

    after an O(N log N) preprocessing step. This version is optimized for idempotent operations

    like finding the minimum or maximum, and it also tracks the index of the result.
  remarks: >-
    An operation is idempotent if applying it multiple times to the same value does not change the result (e.g., min(x, x) = x).

    This implementation is suitable for Range Minimum/Maximum Queries (RMQ).
  example: []
  syntax:
    content: 'public sealed class SparseTable<T> where T : IComparable<T>'
    typeParameters:
    - id: T
      description: The type of elements in the array. Must be comparable.
    content.vb: Public NotInheritable Class SparseTable(Of T As IComparable(Of T))
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SparseTable(Of T)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T)
  name.vb: SparseTable(Of T)
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Size
  commentId: P:BelNytheraSeiche.WaveletMatrix.SparseTable`1.Size
  id: Size
  parent: BelNytheraSeiche.WaveletMatrix.SparseTable`1
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: SparseTable<T>.Size
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.Size
  type: Property
  source:
    id: Size
    path: C:\Users\nanto\dev\WaveletMatrix\src\SparseTable.cs
    startLine: 45
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: Gets the total number of elements in the sequence.
  example: []
  syntax:
    content: public int Size { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Size As Integer
  overload: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Size*
  nameWithType.vb: SparseTable(Of T).Size
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).Size
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.#ctor(System.ReadOnlySpan{`0},System.Func{`0,`0,System.Boolean})
  commentId: M:BelNytheraSeiche.WaveletMatrix.SparseTable`1.#ctor(System.ReadOnlySpan{`0},System.Func{`0,`0,System.Boolean})
  id: '#ctor(System.ReadOnlySpan{`0},System.Func{`0,`0,System.Boolean})'
  parent: BelNytheraSeiche.WaveletMatrix.SparseTable`1
  langs:
  - csharp
  - vb
  name: SparseTable(ReadOnlySpan<T>, Func<T, T, bool>)
  nameWithType: SparseTable<T>.SparseTable(ReadOnlySpan<T>, Func<T, T, bool>)
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.SparseTable(System.ReadOnlySpan<T>, System.Func<T, T, bool>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\nanto\dev\WaveletMatrix\src\SparseTable.cs
    startLine: 81
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Initializes a new instance of the <xref href="BelNytheraSeiche.WaveletMatrix.SparseTable%601" data-throw-if-not-resolved="false"></xref> class.

    The constructor performs preprocessing which takes O(N log N) time and space.
  example: []
  syntax:
    content: public SparseTable(ReadOnlySpan<T> array, Func<T, T, bool> comparer)
    parameters:
    - id: array
      type: System.ReadOnlySpan{{T}}
      description: The static array of data to be queried. The array is not modified.
    - id: comparer
      type: System.Func{{T},{T},System.Boolean}
      description: >-
        A function that compares two elements. It should return <code>true</code> if the first argument is considered "better"

        than the second (e.g., for a minimum query, the comparer would be `(a, b) => a.CompareTo(b) < 0`).
    content.vb: Public Sub New(array As ReadOnlySpan(Of T), comparer As Func(Of T, T, Boolean))
  overload: BelNytheraSeiche.WaveletMatrix.SparseTable`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">comparer</code> is null.
  nameWithType.vb: SparseTable(Of T).New(ReadOnlySpan(Of T), Func(Of T, T, Boolean))
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).New(System.ReadOnlySpan(Of T), System.Func(Of T, T, Boolean))
  name.vb: New(ReadOnlySpan(Of T), Func(Of T, T, Boolean))
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query
  commentId: M:BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query
  id: Query
  parent: BelNytheraSeiche.WaveletMatrix.SparseTable`1
  langs:
  - csharp
  - vb
  name: Query()
  nameWithType: SparseTable<T>.Query()
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.Query()
  type: Method
  source:
    id: Query
    path: C:\Users\nanto\dev\WaveletMatrix\src\SparseTable.cs
    startLine: 124
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Queries to find the best value according to the comparer and its original index.

    This operation takes O(1) time.
  remarks: This method is a shorthand for calling Query(0, <xref href="BelNytheraSeiche.WaveletMatrix.SparseTable%601.Size" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public SparseTable<T>.ValueWithIndex Query()
    return:
      type: BelNytheraSeiche.WaveletMatrix.SparseTable`1.ValueWithIndex
      description: A <xref href="BelNytheraSeiche.WaveletMatrix.SparseTable%601.ValueWithIndex" data-throw-if-not-resolved="false"></xref> record containing the best value and its original index in the input array.
    content.vb: Public Function Query() As SparseTable(Of T).ValueWithIndex
  overload: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query*
  nameWithType.vb: SparseTable(Of T).Query()
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).Query()
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query(System.Int32,System.Int32)
  commentId: M:BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query(System.Int32,System.Int32)
  id: Query(System.Int32,System.Int32)
  parent: BelNytheraSeiche.WaveletMatrix.SparseTable`1
  langs:
  - csharp
  - vb
  name: Query(int, int)
  nameWithType: SparseTable<T>.Query(int, int)
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.Query(int, int)
  type: Method
  source:
    id: Query
    path: C:\Users\nanto\dev\WaveletMatrix\src\SparseTable.cs
    startLine: 136
  assemblies:
  - BelNytheraSeiche.WaveletMatrix
  namespace: BelNytheraSeiche.WaveletMatrix
  summary: >-
    Queries the range [start, end) to find the best value according to the comparer and its original index.

    This operation takes O(1) time.
  example: []
  syntax:
    content: public SparseTable<T>.ValueWithIndex Query(int start, int end)
    parameters:
    - id: start
      type: System.Int32
      description: The inclusive, zero-based start of the range.
    - id: end
      type: System.Int32
      description: The exclusive, zero-based end of the range.
    return:
      type: BelNytheraSeiche.WaveletMatrix.SparseTable`1.ValueWithIndex
      description: A <xref href="BelNytheraSeiche.WaveletMatrix.SparseTable%601.ValueWithIndex" data-throw-if-not-resolved="false"></xref> record containing the best value and its original index in the input array.
    content.vb: Public Function Query(start As Integer, [end] As Integer) As SparseTable(Of T).ValueWithIndex
  overload: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">start</code> or <code class="paramref">end</code> are outside the valid bounds.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">start</code> is greater than or equal <code class="paramref">end</code>.
  nameWithType.vb: SparseTable(Of T).Query(Integer, Integer)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).Query(Integer, Integer)
  name.vb: Query(Integer, Integer)
references:
- uid: BelNytheraSeiche.WaveletMatrix
  commentId: N:BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.html
  name: BelNytheraSeiche.WaveletMatrix
  nameWithType: BelNytheraSeiche.WaveletMatrix
  fullName: BelNytheraSeiche.WaveletMatrix
  spec.csharp:
  - uid: BelNytheraSeiche
    name: BelNytheraSeiche
    href: BelNytheraSeiche.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix
    name: WaveletMatrix
    href: BelNytheraSeiche.WaveletMatrix.html
  spec.vb:
  - uid: BelNytheraSeiche
    name: BelNytheraSeiche
    href: BelNytheraSeiche.html
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix
    name: WaveletMatrix
    href: BelNytheraSeiche.WaveletMatrix.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Size*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.SparseTable`1.Size
  href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html#BelNytheraSeiche_WaveletMatrix_SparseTable_1_Size
  name: Size
  nameWithType: SparseTable<T>.Size
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.Size
  nameWithType.vb: SparseTable(Of T).Size
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1
  commentId: T:BelNytheraSeiche.WaveletMatrix.SparseTable`1
  href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html
  name: SparseTable<T>
  nameWithType: SparseTable<T>
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>
  nameWithType.vb: SparseTable(Of T)
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T)
  name.vb: SparseTable(Of T)
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1
    name: SparseTable
    href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1
    name: SparseTable
    href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.#ctor*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.SparseTable`1.#ctor
  href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html#BelNytheraSeiche_WaveletMatrix_SparseTable_1__ctor_System_ReadOnlySpan__0__System_Func__0__0_System_Boolean__
  name: SparseTable
  nameWithType: SparseTable<T>.SparseTable
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.SparseTable
  nameWithType.vb: SparseTable(Of T).New
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).New
  name.vb: New
- uid: System.ReadOnlySpan{{T}}
  commentId: T:System.ReadOnlySpan{`0}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func{{T},{T},System.Boolean}
  commentId: T:System.Func{`0,`0,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T, T, bool>
  nameWithType: Func<T, T, bool>
  fullName: System.Func<T, T, bool>
  nameWithType.vb: Func(Of T, T, Boolean)
  fullName.vb: System.Func(Of T, T, Boolean)
  name.vb: Func(Of T, T, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.ValueWithIndex
  commentId: T:BelNytheraSeiche.WaveletMatrix.SparseTable`1.ValueWithIndex
  parent: BelNytheraSeiche.WaveletMatrix
  href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html
  name: SparseTable<T>.ValueWithIndex
  nameWithType: SparseTable<T>.ValueWithIndex
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.ValueWithIndex
  nameWithType.vb: SparseTable(Of T).ValueWithIndex
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).ValueWithIndex
  name.vb: SparseTable(Of T).ValueWithIndex
  spec.csharp:
  - uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1
    name: SparseTable
    href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.ValueWithIndex
    name: ValueWithIndex
    href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.ValueWithIndex.html
  spec.vb:
  - uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1
    name: SparseTable
    href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.ValueWithIndex
    name: ValueWithIndex
    href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.ValueWithIndex.html
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Size
  commentId: P:BelNytheraSeiche.WaveletMatrix.SparseTable`1.Size
  href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html#BelNytheraSeiche_WaveletMatrix_SparseTable_1_Size
  name: Size
  nameWithType: SparseTable<T>.Size
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.Size
  nameWithType.vb: SparseTable(Of T).Size
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).Size
- uid: BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query*
  commentId: Overload:BelNytheraSeiche.WaveletMatrix.SparseTable`1.Query
  href: BelNytheraSeiche.WaveletMatrix.SparseTable-1.html#BelNytheraSeiche_WaveletMatrix_SparseTable_1_Query
  name: Query
  nameWithType: SparseTable<T>.Query
  fullName: BelNytheraSeiche.WaveletMatrix.SparseTable<T>.Query
  nameWithType.vb: SparseTable(Of T).Query
  fullName.vb: BelNytheraSeiche.WaveletMatrix.SparseTable(Of T).Query
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
