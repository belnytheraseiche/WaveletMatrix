### YamlMime:ManagedReference
items:
- uid: WaveletMatrix.FMIndex.SortOrder
  commentId: T:WaveletMatrix.FMIndex.SortOrder
  id: FMIndex.SortOrder
  parent: WaveletMatrix
  children:
  - WaveletMatrix.FMIndex.SortOrder.Ascending
  - WaveletMatrix.FMIndex.SortOrder.Descending
  - WaveletMatrix.FMIndex.SortOrder.Unordered
  langs:
  - csharp
  - vb
  name: FMIndex.SortOrder
  nameWithType: FMIndex.SortOrder
  fullName: WaveletMatrix.FMIndex.SortOrder
  type: Enum
  source:
    id: SortOrder
    path: D:\実験\WaveletMatrix\src\FMIndex.cs
    startLine: 558
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Specifies the sort order for the results of a Locate operation.
  example: []
  syntax:
    content: public enum FMIndex.SortOrder
    content.vb: Public Enum FMIndex.SortOrder
- uid: WaveletMatrix.FMIndex.SortOrder.Unordered
  commentId: F:WaveletMatrix.FMIndex.SortOrder.Unordered
  id: Unordered
  parent: WaveletMatrix.FMIndex.SortOrder
  langs:
  - csharp
  - vb
  name: Unordered
  nameWithType: FMIndex.SortOrder.Unordered
  fullName: WaveletMatrix.FMIndex.SortOrder.Unordered
  type: Field
  source:
    id: Unordered
    path: D:\実験\WaveletMatrix\src\FMIndex.cs
    startLine: 563
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: The positions are returned in an unsorted, arbitrary order. This is the most performant option.
  example: []
  syntax:
    content: Unordered = 0
    return:
      type: WaveletMatrix.FMIndex.SortOrder
- uid: WaveletMatrix.FMIndex.SortOrder.Ascending
  commentId: F:WaveletMatrix.FMIndex.SortOrder.Ascending
  id: Ascending
  parent: WaveletMatrix.FMIndex.SortOrder
  langs:
  - csharp
  - vb
  name: Ascending
  nameWithType: FMIndex.SortOrder.Ascending
  fullName: WaveletMatrix.FMIndex.SortOrder.Ascending
  type: Field
  source:
    id: Ascending
    path: D:\実験\WaveletMatrix\src\FMIndex.cs
    startLine: 567
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: The positions are returned in ascending numerical order. This requires an internal sort and is less performant than Unordered.
  example: []
  syntax:
    content: Ascending = 1
    return:
      type: WaveletMatrix.FMIndex.SortOrder
- uid: WaveletMatrix.FMIndex.SortOrder.Descending
  commentId: F:WaveletMatrix.FMIndex.SortOrder.Descending
  id: Descending
  parent: WaveletMatrix.FMIndex.SortOrder
  langs:
  - csharp
  - vb
  name: Descending
  nameWithType: FMIndex.SortOrder.Descending
  fullName: WaveletMatrix.FMIndex.SortOrder.Descending
  type: Field
  source:
    id: Descending
    path: D:\実験\WaveletMatrix\src\FMIndex.cs
    startLine: 571
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: The positions are returned in descending numerical order. This requires an internal sort and is less performant than Unordered.
  example: []
  syntax:
    content: Descending = 2
    return:
      type: WaveletMatrix.FMIndex.SortOrder
references:
- uid: WaveletMatrix
  commentId: N:WaveletMatrix
  href: WaveletMatrix.html
  name: WaveletMatrix
  nameWithType: WaveletMatrix
  fullName: WaveletMatrix
- uid: WaveletMatrix.FMIndex.SortOrder
  commentId: T:WaveletMatrix.FMIndex.SortOrder
  parent: WaveletMatrix
  href: WaveletMatrix.FMIndex.html
  name: FMIndex.SortOrder
  nameWithType: FMIndex.SortOrder
  fullName: WaveletMatrix.FMIndex.SortOrder
  spec.csharp:
  - uid: WaveletMatrix.FMIndex
    name: FMIndex
    href: WaveletMatrix.FMIndex.html
  - name: .
  - uid: WaveletMatrix.FMIndex.SortOrder
    name: SortOrder
    href: WaveletMatrix.FMIndex.SortOrder.html
  spec.vb:
  - uid: WaveletMatrix.FMIndex
    name: FMIndex
    href: WaveletMatrix.FMIndex.html
  - name: .
  - uid: WaveletMatrix.FMIndex.SortOrder
    name: SortOrder
    href: WaveletMatrix.FMIndex.SortOrder.html
