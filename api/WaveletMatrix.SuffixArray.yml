### YamlMime:ManagedReference
items:
- uid: WaveletMatrix.SuffixArray
  commentId: T:WaveletMatrix.SuffixArray
  id: SuffixArray
  parent: WaveletMatrix
  children:
  - WaveletMatrix.SuffixArray.Create(System.ReadOnlyMemory{System.Char})
  - WaveletMatrix.SuffixArray.Create(System.String)
  - WaveletMatrix.SuffixArray.Deserialize(System.Byte[])
  - WaveletMatrix.SuffixArray.Deserialize(System.IO.Stream)
  - WaveletMatrix.SuffixArray.Deserialize(System.String)
  - WaveletMatrix.SuffixArray.Lcp
  - WaveletMatrix.SuffixArray.Rank
  - WaveletMatrix.SuffixArray.SA
  - WaveletMatrix.SuffixArray.Search(System.ReadOnlySpan{System.Char})
  - WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory{System.Char},System.Int32)
  - WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char},System.Int32)
  - WaveletMatrix.SuffixArray.SearchCommon(System.String,System.Int32)
  - WaveletMatrix.SuffixArray.SearchCommon(System.String,System.String,System.Int32)
  - WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory{System.Char})
  - WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  - WaveletMatrix.SuffixArray.SearchLongestCommon(System.String)
  - WaveletMatrix.SuffixArray.SearchLongestCommon(System.String,System.String)
  - WaveletMatrix.SuffixArray.SearchLongestRepeated
  - WaveletMatrix.SuffixArray.SearchRepeated(System.Int32)
  - WaveletMatrix.SuffixArray.SearchWildcard(System.ReadOnlySpan{System.Char},WaveletMatrix.SuffixArray.WildcardOptions)
  - WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,System.IO.Stream,WaveletMatrix.SerializationOptions)
  - WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,System.String,WaveletMatrix.SerializationOptions)
  - WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,WaveletMatrix.SerializationOptions)
  - WaveletMatrix.SuffixArray.Text
  langs:
  - csharp
  - vb
  name: SuffixArray
  nameWithType: SuffixArray
  fullName: WaveletMatrix.SuffixArray
  type: Class
  source:
    id: SuffixArray
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 53
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Provides a powerful string searching data structure using a Suffix Array and LCP Array.
  remarks: >-
    This class builds an index from a given string to perform various advanced searches with high performance.

    Construction is based on the SA-IS algorithm for the suffix array and Kasai's algorithm for the LCP array.

    While the initial construction can be resource-intensive, subsequent search operations are extremely fast.
  example: []
  syntax:
    content: public sealed class SuffixArray
    content.vb: Public NotInheritable Class SuffixArray
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: WaveletMatrix.SuffixArray.Text
  commentId: P:WaveletMatrix.SuffixArray.Text
  id: Text
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: SuffixArray.Text
  fullName: WaveletMatrix.SuffixArray.Text
  type: Property
  source:
    id: Text
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 60
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  syntax:
    content: public ReadOnlyMemory<char> Text { get; }
    parameters: []
    return:
      type: System.ReadOnlyMemory{System.Char}
    content.vb: Public ReadOnly Property Text As ReadOnlyMemory(Of Char)
  overload: WaveletMatrix.SuffixArray.Text*
- uid: WaveletMatrix.SuffixArray.SA
  commentId: P:WaveletMatrix.SuffixArray.SA
  id: SA
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SA
  nameWithType: SuffixArray.SA
  fullName: WaveletMatrix.SuffixArray.SA
  type: Property
  source:
    id: SA
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 61
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  syntax:
    content: public ReadOnlyMemory<int> SA { get; }
    parameters: []
    return:
      type: System.ReadOnlyMemory{System.Int32}
    content.vb: Public ReadOnly Property SA As ReadOnlyMemory(Of Integer)
  overload: WaveletMatrix.SuffixArray.SA*
- uid: WaveletMatrix.SuffixArray.Lcp
  commentId: P:WaveletMatrix.SuffixArray.Lcp
  id: Lcp
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Lcp
  nameWithType: SuffixArray.Lcp
  fullName: WaveletMatrix.SuffixArray.Lcp
  type: Property
  source:
    id: Lcp
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 62
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  syntax:
    content: public ReadOnlyMemory<int> Lcp { get; }
    parameters: []
    return:
      type: System.ReadOnlyMemory{System.Int32}
    content.vb: Public ReadOnly Property Lcp As ReadOnlyMemory(Of Integer)
  overload: WaveletMatrix.SuffixArray.Lcp*
- uid: WaveletMatrix.SuffixArray.Rank
  commentId: P:WaveletMatrix.SuffixArray.Rank
  id: Rank
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: SuffixArray.Rank
  fullName: WaveletMatrix.SuffixArray.Rank
  type: Property
  source:
    id: Rank
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 63
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  syntax:
    content: public ReadOnlyMemory<int> Rank { get; }
    parameters: []
    return:
      type: System.ReadOnlyMemory{System.Int32}
    content.vb: Public ReadOnly Property Rank As ReadOnlyMemory(Of Integer)
  overload: WaveletMatrix.SuffixArray.Rank*
- uid: WaveletMatrix.SuffixArray.Create(System.String)
  commentId: M:WaveletMatrix.SuffixArray.Create(System.String)
  id: Create(System.String)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Create(string)
  nameWithType: SuffixArray.Create(string)
  fullName: WaveletMatrix.SuffixArray.Create(string)
  type: Method
  source:
    id: Create
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 80
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Creates a new instance of the <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref> class by building the suffix and LCP arrays for the specified text.
  example: []
  syntax:
    content: public static SuffixArray Create(string text)
    parameters:
    - id: text
      type: System.String
      description: The input string to be indexed. The string will be held in memory.
    return:
      type: WaveletMatrix.SuffixArray
    content.vb: Public Shared Function Create(text As String) As SuffixArray
  overload: WaveletMatrix.SuffixArray.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">text</code> is null.
  nameWithType.vb: SuffixArray.Create(String)
  fullName.vb: WaveletMatrix.SuffixArray.Create(String)
  name.vb: Create(String)
- uid: WaveletMatrix.SuffixArray.Create(System.ReadOnlyMemory{System.Char})
  commentId: M:WaveletMatrix.SuffixArray.Create(System.ReadOnlyMemory{System.Char})
  id: Create(System.ReadOnlyMemory{System.Char})
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Create(ReadOnlyMemory<char>)
  nameWithType: SuffixArray.Create(ReadOnlyMemory<char>)
  fullName: WaveletMatrix.SuffixArray.Create(System.ReadOnlyMemory<char>)
  type: Method
  source:
    id: Create
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 89
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Creates a new instance of the <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref> class by building the suffix and LCP arrays for the specified text.
  example: []
  syntax:
    content: public static SuffixArray Create(ReadOnlyMemory<char> text)
    parameters:
    - id: text
      type: System.ReadOnlyMemory{System.Char}
      description: The input string to be indexed. The string will be held in memory.
    return:
      type: WaveletMatrix.SuffixArray
    content.vb: Public Shared Function Create(text As ReadOnlyMemory(Of Char)) As SuffixArray
  overload: WaveletMatrix.SuffixArray.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">text</code> is null.
  nameWithType.vb: SuffixArray.Create(ReadOnlyMemory(Of Char))
  fullName.vb: WaveletMatrix.SuffixArray.Create(System.ReadOnlyMemory(Of Char))
  name.vb: Create(ReadOnlyMemory(Of Char))
- uid: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,WaveletMatrix.SerializationOptions)
  commentId: M:WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,WaveletMatrix.SerializationOptions)
  id: Serialize(WaveletMatrix.SuffixArray,WaveletMatrix.SerializationOptions)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Serialize(SuffixArray, SerializationOptions?)
  nameWithType: SuffixArray.Serialize(SuffixArray, SerializationOptions?)
  fullName: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray, WaveletMatrix.SerializationOptions?)
  type: Method
  source:
    id: Serialize
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 113
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Serializes the <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref> instance into a byte array.
  example: []
  syntax:
    content: public static byte[] Serialize(SuffixArray obj, SerializationOptions? options = null)
    parameters:
    - id: obj
      type: WaveletMatrix.SuffixArray
      description: The instance to serialize.
    - id: options
      type: WaveletMatrix.SerializationOptions
      description: >-
        Serialization options, such as the compression level. 

        If null, <xref href="WaveletMatrix.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    return:
      type: System.Byte[]
      description: A byte array containing the serialized data.
    content.vb: Public Shared Function Serialize(obj As SuffixArray, options As SerializationOptions = Nothing) As Byte()
  overload: WaveletMatrix.SuffixArray.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">obj</code> is null.
  nameWithType.vb: SuffixArray.Serialize(SuffixArray, SerializationOptions)
  fullName.vb: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray, WaveletMatrix.SerializationOptions)
  name.vb: Serialize(SuffixArray, SerializationOptions)
- uid: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,System.String,WaveletMatrix.SerializationOptions)
  commentId: M:WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,System.String,WaveletMatrix.SerializationOptions)
  id: Serialize(WaveletMatrix.SuffixArray,System.String,WaveletMatrix.SerializationOptions)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Serialize(SuffixArray, string, SerializationOptions?)
  nameWithType: SuffixArray.Serialize(SuffixArray, string, SerializationOptions?)
  fullName: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray, string, WaveletMatrix.SerializationOptions?)
  type: Method
  source:
    id: Serialize
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 137
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Serializes the <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref> instance to the specified file.
  example: []
  syntax:
    content: public static void Serialize(SuffixArray obj, string file, SerializationOptions? options = null)
    parameters:
    - id: obj
      type: WaveletMatrix.SuffixArray
      description: The instance to serialize.
    - id: file
      type: System.String
      description: The path of the file to write to.
    - id: options
      type: WaveletMatrix.SerializationOptions
      description: >-
        Serialization options, such as the compression level. 

        If null, <xref href="WaveletMatrix.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    content.vb: Public Shared Sub Serialize(obj As SuffixArray, file As String, options As SerializationOptions = Nothing)
  overload: WaveletMatrix.SuffixArray.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">obj</code> or <code class="paramref">file</code> is null.
  nameWithType.vb: SuffixArray.Serialize(SuffixArray, String, SerializationOptions)
  fullName.vb: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray, String, WaveletMatrix.SerializationOptions)
  name.vb: Serialize(SuffixArray, String, SerializationOptions)
- uid: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,System.IO.Stream,WaveletMatrix.SerializationOptions)
  commentId: M:WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray,System.IO.Stream,WaveletMatrix.SerializationOptions)
  id: Serialize(WaveletMatrix.SuffixArray,System.IO.Stream,WaveletMatrix.SerializationOptions)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Serialize(SuffixArray, Stream, SerializationOptions?)
  nameWithType: SuffixArray.Serialize(SuffixArray, Stream, SerializationOptions?)
  fullName: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray, System.IO.Stream, WaveletMatrix.SerializationOptions?)
  type: Method
  source:
    id: Serialize
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 164
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: >-
    Serializes the <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref> instance to a stream.

    The data is compressed using Brotli and includes a checksum for integrity verification.
  example: []
  syntax:
    content: public static void Serialize(SuffixArray obj, Stream stream, SerializationOptions? options = null)
    parameters:
    - id: obj
      type: WaveletMatrix.SuffixArray
      description: The instance to serialize.
    - id: stream
      type: System.IO.Stream
      description: The stream to write the serialized data to.
    - id: options
      type: WaveletMatrix.SerializationOptions
      description: >-
        Serialization options, such as the compression level. 

        If null, <xref href="WaveletMatrix.SerializationOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    content.vb: Public Shared Sub Serialize(obj As SuffixArray, stream As Stream, options As SerializationOptions = Nothing)
  overload: WaveletMatrix.SuffixArray.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">obj</code> or <code class="paramref">stream</code> is null.
  nameWithType.vb: SuffixArray.Serialize(SuffixArray, Stream, SerializationOptions)
  fullName.vb: WaveletMatrix.SuffixArray.Serialize(WaveletMatrix.SuffixArray, System.IO.Stream, WaveletMatrix.SerializationOptions)
  name.vb: Serialize(SuffixArray, Stream, SerializationOptions)
- uid: WaveletMatrix.SuffixArray.Deserialize(System.Byte[])
  commentId: M:WaveletMatrix.SuffixArray.Deserialize(System.Byte[])
  id: Deserialize(System.Byte[])
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Deserialize(byte[])
  nameWithType: SuffixArray.Deserialize(byte[])
  fullName: WaveletMatrix.SuffixArray.Deserialize(byte[])
  type: Method
  source:
    id: Deserialize
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 305
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Deserializes a byte array into a <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static SuffixArray Deserialize(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: The byte array containing the serialized data.
    return:
      type: WaveletMatrix.SuffixArray
      description: A new, deserialized instance of <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Deserialize(data As Byte()) As SuffixArray
  overload: WaveletMatrix.SuffixArray.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">data</code> is null.
  nameWithType.vb: SuffixArray.Deserialize(Byte())
  fullName.vb: WaveletMatrix.SuffixArray.Deserialize(Byte())
  name.vb: Deserialize(Byte())
- uid: WaveletMatrix.SuffixArray.Deserialize(System.String)
  commentId: M:WaveletMatrix.SuffixArray.Deserialize(System.String)
  id: Deserialize(System.String)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Deserialize(string)
  nameWithType: SuffixArray.Deserialize(string)
  fullName: WaveletMatrix.SuffixArray.Deserialize(string)
  type: Method
  source:
    id: Deserialize
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 324
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Deserializes a <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref> instance from the specified file.
  example: []
  syntax:
    content: public static SuffixArray Deserialize(string file)
    parameters:
    - id: file
      type: System.String
      description: The path of the file to read from.
    return:
      type: WaveletMatrix.SuffixArray
      description: A new, deserialized instance.
    content.vb: Public Shared Function Deserialize(file As String) As SuffixArray
  overload: WaveletMatrix.SuffixArray.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">file</code> is null.
  nameWithType.vb: SuffixArray.Deserialize(String)
  fullName.vb: WaveletMatrix.SuffixArray.Deserialize(String)
  name.vb: Deserialize(String)
- uid: WaveletMatrix.SuffixArray.Deserialize(System.IO.Stream)
  commentId: M:WaveletMatrix.SuffixArray.Deserialize(System.IO.Stream)
  id: Deserialize(System.IO.Stream)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Deserialize(Stream)
  nameWithType: SuffixArray.Deserialize(Stream)
  fullName: WaveletMatrix.SuffixArray.Deserialize(System.IO.Stream)
  type: Method
  source:
    id: Deserialize
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 345
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: >-
    Deserializes a <xref href="WaveletMatrix.SuffixArray" data-throw-if-not-resolved="false"></xref> instance from a stream.

    It verifies the file format, type identifier, and checksum.
  example: []
  syntax:
    content: public static SuffixArray Deserialize(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to read the serialized data from.
    return:
      type: WaveletMatrix.SuffixArray
      description: A new, deserialized instance.
    content.vb: Public Shared Function Deserialize(stream As Stream) As SuffixArray
  overload: WaveletMatrix.SuffixArray.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">stream</code> is null.
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: Thrown if the data format is unsupported, the type is incompatible, or the data is corrupt.
- uid: WaveletMatrix.SuffixArray.Search(System.ReadOnlySpan{System.Char})
  commentId: M:WaveletMatrix.SuffixArray.Search(System.ReadOnlySpan{System.Char})
  id: Search(System.ReadOnlySpan{System.Char})
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: Search(ReadOnlySpan<char>)
  nameWithType: SuffixArray.Search(ReadOnlySpan<char>)
  fullName: WaveletMatrix.SuffixArray.Search(System.ReadOnlySpan<char>)
  type: Method
  source:
    id: Search
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 434
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Finds all starting positions of a specified substring. The search is case-sensitive.
  example: []
  syntax:
    content: public IEnumerable<int> Search(ReadOnlySpan<char> text)
    parameters:
    - id: text
      type: System.ReadOnlySpan{System.Char}
      description: The substring to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: An enumerable collection of 0-based starting positions where the substring is found, sorted in ascending order.
    content.vb: Public Function Search(text As ReadOnlySpan(Of Char)) As IEnumerable(Of Integer)
  overload: WaveletMatrix.SuffixArray.Search*
  nameWithType.vb: SuffixArray.Search(ReadOnlySpan(Of Char))
  fullName.vb: WaveletMatrix.SuffixArray.Search(System.ReadOnlySpan(Of Char))
  name.vb: Search(ReadOnlySpan(Of Char))
- uid: WaveletMatrix.SuffixArray.SearchLongestRepeated
  commentId: M:WaveletMatrix.SuffixArray.SearchLongestRepeated
  id: SearchLongestRepeated
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchLongestRepeated()
  nameWithType: SuffixArray.SearchLongestRepeated()
  fullName: WaveletMatrix.SuffixArray.SearchLongestRepeated()
  type: Method
  source:
    id: SearchLongestRepeated
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 516
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Finds the longest substring(s) that appear more than once in the text.
  example: []
  syntax:
    content: public IEnumerable<SuffixArray.MatchRepeated> SearchLongestRepeated()
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchRepeated}
      description: An enumerable collection of <xref href="WaveletMatrix.SuffixArray.MatchRepeated" data-throw-if-not-resolved="false"></xref> records, one for each longest repeated substring found.
    content.vb: Public Function SearchLongestRepeated() As IEnumerable(Of SuffixArray.MatchRepeated)
  overload: WaveletMatrix.SuffixArray.SearchLongestRepeated*
- uid: WaveletMatrix.SuffixArray.SearchRepeated(System.Int32)
  commentId: M:WaveletMatrix.SuffixArray.SearchRepeated(System.Int32)
  id: SearchRepeated(System.Int32)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchRepeated(int)
  nameWithType: SuffixArray.SearchRepeated(int)
  fullName: WaveletMatrix.SuffixArray.SearchRepeated(int)
  type: Method
  source:
    id: SearchRepeated
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 545
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Finds all unique substrings that are repeated in the text and meet a minimum length requirement.
  example: []
  syntax:
    content: public IEnumerable<SuffixArray.MatchRepeated> SearchRepeated(int minLength = 2)
    parameters:
    - id: minLength
      type: System.Int32
      description: The minimum length of the repeated substrings to find. Must be 2 or greater.
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchRepeated}
      description: An enumerable collection of <xref href="WaveletMatrix.SuffixArray.MatchRepeated" data-throw-if-not-resolved="false"></xref> records for each unique repeated substring found.
    content.vb: Public Function SearchRepeated(minLength As Integer = 2) As IEnumerable(Of SuffixArray.MatchRepeated)
  overload: WaveletMatrix.SuffixArray.SearchRepeated*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">minLength</code> is less than 2.
  nameWithType.vb: SuffixArray.SearchRepeated(Integer)
  fullName.vb: WaveletMatrix.SuffixArray.SearchRepeated(Integer)
  name.vb: SearchRepeated(Integer)
- uid: WaveletMatrix.SuffixArray.SearchLongestCommon(System.String)
  commentId: M:WaveletMatrix.SuffixArray.SearchLongestCommon(System.String)
  id: SearchLongestCommon(System.String)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchLongestCommon(string)
  nameWithType: SuffixArray.SearchLongestCommon(string)
  fullName: WaveletMatrix.SuffixArray.SearchLongestCommon(string)
  type: Method
  source:
    id: SearchLongestCommon
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 581
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Finds the longest common substring(s) between the text of this instance and another specified text.
  example: []
  syntax:
    content: public IEnumerable<SuffixArray.MatchGroup> SearchLongestCommon(string text)
    parameters:
    - id: text
      type: System.String
      description: The other text to compare against.
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
      description: An enumerable collection of <xref href="WaveletMatrix.SuffixArray.MatchGroup" data-throw-if-not-resolved="false"></xref> records for each longest common substring found.
    content.vb: Public Function SearchLongestCommon(text As String) As IEnumerable(Of SuffixArray.MatchGroup)
  overload: WaveletMatrix.SuffixArray.SearchLongestCommon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">text</code> is null.
  nameWithType.vb: SuffixArray.SearchLongestCommon(String)
  fullName.vb: WaveletMatrix.SuffixArray.SearchLongestCommon(String)
  name.vb: SearchLongestCommon(String)
- uid: WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory{System.Char})
  commentId: M:WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory{System.Char})
  id: SearchLongestCommon(System.ReadOnlyMemory{System.Char})
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchLongestCommon(ReadOnlyMemory<char>)
  nameWithType: SuffixArray.SearchLongestCommon(ReadOnlyMemory<char>)
  fullName: WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory<char>)
  type: Method
  source:
    id: SearchLongestCommon
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 584
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  syntax:
    content: public IEnumerable<SuffixArray.MatchGroup> SearchLongestCommon(ReadOnlyMemory<char> text)
    parameters:
    - id: text
      type: System.ReadOnlyMemory{System.Char}
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
    content.vb: Public Function SearchLongestCommon(text As ReadOnlyMemory(Of Char)) As IEnumerable(Of SuffixArray.MatchGroup)
  overload: WaveletMatrix.SuffixArray.SearchLongestCommon*
  nameWithType.vb: SuffixArray.SearchLongestCommon(ReadOnlyMemory(Of Char))
  fullName.vb: WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory(Of Char))
  name.vb: SearchLongestCommon(ReadOnlyMemory(Of Char))
- uid: WaveletMatrix.SuffixArray.SearchLongestCommon(System.String,System.String)
  commentId: M:WaveletMatrix.SuffixArray.SearchLongestCommon(System.String,System.String)
  id: SearchLongestCommon(System.String,System.String)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchLongestCommon(string, string)
  nameWithType: SuffixArray.SearchLongestCommon(string, string)
  fullName: WaveletMatrix.SuffixArray.SearchLongestCommon(string, string)
  type: Method
  source:
    id: SearchLongestCommon
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 600
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Finds the longest common substring(s) between two specified texts.
  example: []
  syntax:
    content: public static IEnumerable<SuffixArray.MatchGroup> SearchLongestCommon(string text1, string text2)
    parameters:
    - id: text1
      type: System.String
      description: The first text.
    - id: text2
      type: System.String
      description: The second text.
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
      description: An enumerable collection of <xref href="WaveletMatrix.SuffixArray.MatchGroup" data-throw-if-not-resolved="false"></xref> records for each longest common substring found.
    content.vb: Public Shared Function SearchLongestCommon(text1 As String, text2 As String) As IEnumerable(Of SuffixArray.MatchGroup)
  overload: WaveletMatrix.SuffixArray.SearchLongestCommon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">text1</code> or <code class="paramref">text2</code> is null.
  nameWithType.vb: SuffixArray.SearchLongestCommon(String, String)
  fullName.vb: WaveletMatrix.SuffixArray.SearchLongestCommon(String, String)
  name.vb: SearchLongestCommon(String, String)
- uid: WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  commentId: M:WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  id: SearchLongestCommon(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchLongestCommon(ReadOnlyMemory<char>, ReadOnlyMemory<char>)
  nameWithType: SuffixArray.SearchLongestCommon(ReadOnlyMemory<char>, ReadOnlyMemory<char>)
  fullName: WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory<char>, System.ReadOnlyMemory<char>)
  type: Method
  source:
    id: SearchLongestCommon
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 603
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  syntax:
    content: public static IEnumerable<SuffixArray.MatchGroup> SearchLongestCommon(ReadOnlyMemory<char> text1, ReadOnlyMemory<char> text2)
    parameters:
    - id: text1
      type: System.ReadOnlyMemory{System.Char}
    - id: text2
      type: System.ReadOnlyMemory{System.Char}
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
    content.vb: Public Shared Function SearchLongestCommon(text1 As ReadOnlyMemory(Of Char), text2 As ReadOnlyMemory(Of Char)) As IEnumerable(Of SuffixArray.MatchGroup)
  overload: WaveletMatrix.SuffixArray.SearchLongestCommon*
  nameWithType.vb: SuffixArray.SearchLongestCommon(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
  fullName.vb: WaveletMatrix.SuffixArray.SearchLongestCommon(System.ReadOnlyMemory(Of Char), System.ReadOnlyMemory(Of Char))
  name.vb: SearchLongestCommon(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
- uid: WaveletMatrix.SuffixArray.SearchCommon(System.String,System.Int32)
  commentId: M:WaveletMatrix.SuffixArray.SearchCommon(System.String,System.Int32)
  id: SearchCommon(System.String,System.Int32)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchCommon(string, int)
  nameWithType: SuffixArray.SearchCommon(string, int)
  fullName: WaveletMatrix.SuffixArray.SearchCommon(string, int)
  type: Method
  source:
    id: SearchCommon
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 655
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Finds all common substrings between the text of this instance and another specified text that meet a minimum length requirement.
  example: []
  syntax:
    content: public IEnumerable<SuffixArray.MatchGroup> SearchCommon(string text, int minLength = 2)
    parameters:
    - id: text
      type: System.String
      description: The other text to compare against.
    - id: minLength
      type: System.Int32
      description: The minimum length of the common substrings to find. Must be 2 or greater.
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
      description: An enumerable collection of <xref href="WaveletMatrix.SuffixArray.MatchGroup" data-throw-if-not-resolved="false"></xref> records for each unique common substring found.
    content.vb: Public Function SearchCommon(text As String, minLength As Integer = 2) As IEnumerable(Of SuffixArray.MatchGroup)
  overload: WaveletMatrix.SuffixArray.SearchCommon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">text</code> is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">minLength</code> is less than 2.
  nameWithType.vb: SuffixArray.SearchCommon(String, Integer)
  fullName.vb: WaveletMatrix.SuffixArray.SearchCommon(String, Integer)
  name.vb: SearchCommon(String, Integer)
- uid: WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory{System.Char},System.Int32)
  commentId: M:WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory{System.Char},System.Int32)
  id: SearchCommon(System.ReadOnlyMemory{System.Char},System.Int32)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchCommon(ReadOnlyMemory<char>, int)
  nameWithType: SuffixArray.SearchCommon(ReadOnlyMemory<char>, int)
  fullName: WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory<char>, int)
  type: Method
  source:
    id: SearchCommon
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 658
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  syntax:
    content: public IEnumerable<SuffixArray.MatchGroup> SearchCommon(ReadOnlyMemory<char> text, int minLength = 2)
    parameters:
    - id: text
      type: System.ReadOnlyMemory{System.Char}
    - id: minLength
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
    content.vb: Public Function SearchCommon(text As ReadOnlyMemory(Of Char), minLength As Integer = 2) As IEnumerable(Of SuffixArray.MatchGroup)
  overload: WaveletMatrix.SuffixArray.SearchCommon*
  nameWithType.vb: SuffixArray.SearchCommon(ReadOnlyMemory(Of Char), Integer)
  fullName.vb: WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory(Of Char), Integer)
  name.vb: SearchCommon(ReadOnlyMemory(Of Char), Integer)
- uid: WaveletMatrix.SuffixArray.SearchCommon(System.String,System.String,System.Int32)
  commentId: M:WaveletMatrix.SuffixArray.SearchCommon(System.String,System.String,System.Int32)
  id: SearchCommon(System.String,System.String,System.Int32)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchCommon(string, string, int)
  nameWithType: SuffixArray.SearchCommon(string, string, int)
  fullName: WaveletMatrix.SuffixArray.SearchCommon(string, string, int)
  type: Method
  source:
    id: SearchCommon
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 683
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Finds all common substrings between two specified texts that meet a minimum length requirement.
  example: []
  syntax:
    content: public static IEnumerable<SuffixArray.MatchGroup> SearchCommon(string text1, string text2, int minLength = 2)
    parameters:
    - id: text1
      type: System.String
      description: The first text.
    - id: text2
      type: System.String
      description: The second text.
    - id: minLength
      type: System.Int32
      description: The minimum length of the common substrings to find. Must be 2 or greater.
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
      description: An enumerable collection of <xref href="WaveletMatrix.SuffixArray.MatchGroup" data-throw-if-not-resolved="false"></xref> records for each unique common substring found.
    content.vb: Public Shared Function SearchCommon(text1 As String, text2 As String, minLength As Integer = 2) As IEnumerable(Of SuffixArray.MatchGroup)
  overload: WaveletMatrix.SuffixArray.SearchCommon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">text1</code> or <code class="paramref">text2</code> is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">minLength</code> is less than 2.
  nameWithType.vb: SuffixArray.SearchCommon(String, String, Integer)
  fullName.vb: WaveletMatrix.SuffixArray.SearchCommon(String, String, Integer)
  name.vb: SearchCommon(String, String, Integer)
- uid: WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char},System.Int32)
  commentId: M:WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char},System.Int32)
  id: SearchCommon(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char},System.Int32)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchCommon(ReadOnlyMemory<char>, ReadOnlyMemory<char>, int)
  nameWithType: SuffixArray.SearchCommon(ReadOnlyMemory<char>, ReadOnlyMemory<char>, int)
  fullName: WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory<char>, System.ReadOnlyMemory<char>, int)
  type: Method
  source:
    id: SearchCommon
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 686
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  syntax:
    content: public static IEnumerable<SuffixArray.MatchGroup> SearchCommon(ReadOnlyMemory<char> text1, ReadOnlyMemory<char> text2, int minLength = 2)
    parameters:
    - id: text1
      type: System.ReadOnlyMemory{System.Char}
    - id: text2
      type: System.ReadOnlyMemory{System.Char}
    - id: minLength
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
    content.vb: Public Shared Function SearchCommon(text1 As ReadOnlyMemory(Of Char), text2 As ReadOnlyMemory(Of Char), minLength As Integer = 2) As IEnumerable(Of SuffixArray.MatchGroup)
  overload: WaveletMatrix.SuffixArray.SearchCommon*
  nameWithType.vb: SuffixArray.SearchCommon(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char), Integer)
  fullName.vb: WaveletMatrix.SuffixArray.SearchCommon(System.ReadOnlyMemory(Of Char), System.ReadOnlyMemory(Of Char), Integer)
  name.vb: SearchCommon(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char), Integer)
- uid: WaveletMatrix.SuffixArray.SearchWildcard(System.ReadOnlySpan{System.Char},WaveletMatrix.SuffixArray.WildcardOptions)
  commentId: M:WaveletMatrix.SuffixArray.SearchWildcard(System.ReadOnlySpan{System.Char},WaveletMatrix.SuffixArray.WildcardOptions)
  id: SearchWildcard(System.ReadOnlySpan{System.Char},WaveletMatrix.SuffixArray.WildcardOptions)
  parent: WaveletMatrix.SuffixArray
  langs:
  - csharp
  - vb
  name: SearchWildcard(ReadOnlySpan<char>, WildcardOptions?)
  nameWithType: SuffixArray.SearchWildcard(ReadOnlySpan<char>, SuffixArray.WildcardOptions?)
  fullName: WaveletMatrix.SuffixArray.SearchWildcard(System.ReadOnlySpan<char>, WaveletMatrix.SuffixArray.WildcardOptions?)
  type: Method
  source:
    id: SearchWildcard
    path: D:\実験\WaveletMatrix\src\SuffixArray.cs
    startLine: 749
  assemblies:
  - WaveletMatrix
  namespace: WaveletMatrix
  summary: Finds all substrings that match a given pattern containing wildcards.
  remarks: The search is anchored by the non-wildcard parts of the pattern. Therefore, leading and trailing asterisks are trimmed as they do not provide additional constraints for the search and have no effect on the result.
  example: []
  syntax:
    content: public IEnumerable<SuffixArray.Match> SearchWildcard(ReadOnlySpan<char> expr, SuffixArray.WildcardOptions? options = null)
    parameters:
    - id: expr
      type: System.ReadOnlySpan{System.Char}
      description: The search pattern. Use '*' for a variable-length wildcard and '?' for a single-character wildcard.
    - id: options
      type: WaveletMatrix.SuffixArray.WildcardOptions
      description: The options that customize the wildcard search behavior. If null, the default options specified by <xref href="WaveletMatrix.SuffixArray.WildcardOptions.Default" data-throw-if-not-resolved="false"></xref> will be used.
    return:
      type: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.Match}
      description: An enumerable collection of <xref href="WaveletMatrix.SuffixArray.Match" data-throw-if-not-resolved="false"></xref> records for all found occurrences.
    content.vb: Public Function SearchWildcard(expr As ReadOnlySpan(Of Char), options As SuffixArray.WildcardOptions = Nothing) As IEnumerable(Of SuffixArray.Match)
  overload: WaveletMatrix.SuffixArray.SearchWildcard*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">expr</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <see name="WildcardOptions.Asterisk"></see> and <see name="WildcardOptions.Question"></see> are the same character.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <see name="WildcardOptions.Asterisk"></see> or <see name="WildcardOptions.Question"></see> are found in <see name="WildcardOptions.StopCharacters"></see>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <see name="WildcardOptions.AsteriskMinLength"></see> is greater than <see name="WildcardOptions.AsteriskMaxLength"></see>.
  nameWithType.vb: SuffixArray.SearchWildcard(ReadOnlySpan(Of Char), SuffixArray.WildcardOptions)
  fullName.vb: WaveletMatrix.SuffixArray.SearchWildcard(System.ReadOnlySpan(Of Char), WaveletMatrix.SuffixArray.WildcardOptions)
  name.vb: SearchWildcard(ReadOnlySpan(Of Char), WildcardOptions)
references:
- uid: WaveletMatrix
  commentId: N:WaveletMatrix
  href: WaveletMatrix.html
  name: WaveletMatrix
  nameWithType: WaveletMatrix
  fullName: WaveletMatrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: WaveletMatrix.SuffixArray.Text*
  commentId: Overload:WaveletMatrix.SuffixArray.Text
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_Text
  name: Text
  nameWithType: SuffixArray.Text
  fullName: WaveletMatrix.SuffixArray.Text
- uid: System.ReadOnlyMemory{System.Char}
  commentId: T:System.ReadOnlyMemory{System.Char}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<char>
  nameWithType: ReadOnlyMemory<char>
  fullName: System.ReadOnlyMemory<char>
  nameWithType.vb: ReadOnlyMemory(Of Char)
  fullName.vb: System.ReadOnlyMemory(Of Char)
  name.vb: ReadOnlyMemory(Of Char)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: WaveletMatrix.SuffixArray.SA*
  commentId: Overload:WaveletMatrix.SuffixArray.SA
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_SA
  name: SA
  nameWithType: SuffixArray.SA
  fullName: WaveletMatrix.SuffixArray.SA
- uid: System.ReadOnlyMemory{System.Int32}
  commentId: T:System.ReadOnlyMemory{System.Int32}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<int>
  nameWithType: ReadOnlyMemory<int>
  fullName: System.ReadOnlyMemory<int>
  nameWithType.vb: ReadOnlyMemory(Of Integer)
  fullName.vb: System.ReadOnlyMemory(Of Integer)
  name.vb: ReadOnlyMemory(Of Integer)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: WaveletMatrix.SuffixArray.Lcp*
  commentId: Overload:WaveletMatrix.SuffixArray.Lcp
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_Lcp
  name: Lcp
  nameWithType: SuffixArray.Lcp
  fullName: WaveletMatrix.SuffixArray.Lcp
- uid: WaveletMatrix.SuffixArray.Rank*
  commentId: Overload:WaveletMatrix.SuffixArray.Rank
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_Rank
  name: Rank
  nameWithType: SuffixArray.Rank
  fullName: WaveletMatrix.SuffixArray.Rank
- uid: WaveletMatrix.SuffixArray
  commentId: T:WaveletMatrix.SuffixArray
  parent: WaveletMatrix
  href: WaveletMatrix.SuffixArray.html
  name: SuffixArray
  nameWithType: SuffixArray
  fullName: WaveletMatrix.SuffixArray
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: WaveletMatrix.SuffixArray.Create*
  commentId: Overload:WaveletMatrix.SuffixArray.Create
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_Create_System_String_
  name: Create
  nameWithType: SuffixArray.Create
  fullName: WaveletMatrix.SuffixArray.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: WaveletMatrix.SerializationOptions.Default
  commentId: P:WaveletMatrix.SerializationOptions.Default
  href: WaveletMatrix.SerializationOptions.html#WaveletMatrix_SerializationOptions_Default
  name: Default
  nameWithType: SerializationOptions.Default
  fullName: WaveletMatrix.SerializationOptions.Default
- uid: WaveletMatrix.SuffixArray.Serialize*
  commentId: Overload:WaveletMatrix.SuffixArray.Serialize
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_Serialize_WaveletMatrix_SuffixArray_WaveletMatrix_SerializationOptions_
  name: Serialize
  nameWithType: SuffixArray.Serialize
  fullName: WaveletMatrix.SuffixArray.Serialize
- uid: WaveletMatrix.SerializationOptions
  commentId: T:WaveletMatrix.SerializationOptions
  parent: WaveletMatrix
  href: WaveletMatrix.SerializationOptions.html
  name: SerializationOptions
  nameWithType: SerializationOptions
  fullName: WaveletMatrix.SerializationOptions
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: WaveletMatrix.SuffixArray.Deserialize*
  commentId: Overload:WaveletMatrix.SuffixArray.Deserialize
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_Deserialize_System_Byte___
  name: Deserialize
  nameWithType: SuffixArray.Deserialize
  fullName: WaveletMatrix.SuffixArray.Deserialize
- uid: System.IO.InvalidDataException
  commentId: T:System.IO.InvalidDataException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.invaliddataexception
  name: InvalidDataException
  nameWithType: InvalidDataException
  fullName: System.IO.InvalidDataException
- uid: WaveletMatrix.SuffixArray.Search*
  commentId: Overload:WaveletMatrix.SuffixArray.Search
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_Search_System_ReadOnlySpan_System_Char__
  name: Search
  nameWithType: SuffixArray.Search
  fullName: WaveletMatrix.SuffixArray.Search
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<int>
  nameWithType: IEnumerable<int>
  fullName: System.Collections.Generic.IEnumerable<int>
  nameWithType.vb: IEnumerable(Of Integer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Integer)
  name.vb: IEnumerable(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: WaveletMatrix.SuffixArray.MatchRepeated
  commentId: T:WaveletMatrix.SuffixArray.MatchRepeated
  href: WaveletMatrix.SuffixArray.html
  name: SuffixArray.MatchRepeated
  nameWithType: SuffixArray.MatchRepeated
  fullName: WaveletMatrix.SuffixArray.MatchRepeated
  spec.csharp:
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.MatchRepeated
    name: MatchRepeated
    href: WaveletMatrix.SuffixArray.MatchRepeated.html
  spec.vb:
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.MatchRepeated
    name: MatchRepeated
    href: WaveletMatrix.SuffixArray.MatchRepeated.html
- uid: WaveletMatrix.SuffixArray.SearchLongestRepeated*
  commentId: Overload:WaveletMatrix.SuffixArray.SearchLongestRepeated
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_SearchLongestRepeated
  name: SearchLongestRepeated
  nameWithType: SuffixArray.SearchLongestRepeated
  fullName: WaveletMatrix.SuffixArray.SearchLongestRepeated
- uid: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchRepeated}
  commentId: T:System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchRepeated}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<SuffixArray.MatchRepeated>
  nameWithType: IEnumerable<SuffixArray.MatchRepeated>
  fullName: System.Collections.Generic.IEnumerable<WaveletMatrix.SuffixArray.MatchRepeated>
  nameWithType.vb: IEnumerable(Of SuffixArray.MatchRepeated)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveletMatrix.SuffixArray.MatchRepeated)
  name.vb: IEnumerable(Of SuffixArray.MatchRepeated)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.MatchRepeated
    name: MatchRepeated
    href: WaveletMatrix.SuffixArray.MatchRepeated.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.MatchRepeated
    name: MatchRepeated
    href: WaveletMatrix.SuffixArray.MatchRepeated.html
  - name: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: WaveletMatrix.SuffixArray.SearchRepeated*
  commentId: Overload:WaveletMatrix.SuffixArray.SearchRepeated
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_SearchRepeated_System_Int32_
  name: SearchRepeated
  nameWithType: SuffixArray.SearchRepeated
  fullName: WaveletMatrix.SuffixArray.SearchRepeated
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: WaveletMatrix.SuffixArray.MatchGroup
  commentId: T:WaveletMatrix.SuffixArray.MatchGroup
  href: WaveletMatrix.SuffixArray.html
  name: SuffixArray.MatchGroup
  nameWithType: SuffixArray.MatchGroup
  fullName: WaveletMatrix.SuffixArray.MatchGroup
  spec.csharp:
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.MatchGroup
    name: MatchGroup
    href: WaveletMatrix.SuffixArray.MatchGroup.html
  spec.vb:
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.MatchGroup
    name: MatchGroup
    href: WaveletMatrix.SuffixArray.MatchGroup.html
- uid: WaveletMatrix.SuffixArray.SearchLongestCommon*
  commentId: Overload:WaveletMatrix.SuffixArray.SearchLongestCommon
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_SearchLongestCommon_System_String_
  name: SearchLongestCommon
  nameWithType: SuffixArray.SearchLongestCommon
  fullName: WaveletMatrix.SuffixArray.SearchLongestCommon
- uid: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
  commentId: T:System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.MatchGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<SuffixArray.MatchGroup>
  nameWithType: IEnumerable<SuffixArray.MatchGroup>
  fullName: System.Collections.Generic.IEnumerable<WaveletMatrix.SuffixArray.MatchGroup>
  nameWithType.vb: IEnumerable(Of SuffixArray.MatchGroup)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveletMatrix.SuffixArray.MatchGroup)
  name.vb: IEnumerable(Of SuffixArray.MatchGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.MatchGroup
    name: MatchGroup
    href: WaveletMatrix.SuffixArray.MatchGroup.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.MatchGroup
    name: MatchGroup
    href: WaveletMatrix.SuffixArray.MatchGroup.html
  - name: )
- uid: WaveletMatrix.SuffixArray.SearchCommon*
  commentId: Overload:WaveletMatrix.SuffixArray.SearchCommon
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_SearchCommon_System_String_System_Int32_
  name: SearchCommon
  nameWithType: SuffixArray.SearchCommon
  fullName: WaveletMatrix.SuffixArray.SearchCommon
- uid: WaveletMatrix.SuffixArray.WildcardOptions.Default
  commentId: P:WaveletMatrix.SuffixArray.WildcardOptions.Default
  href: WaveletMatrix.SuffixArray.WildcardOptions.html#WaveletMatrix_SuffixArray_WildcardOptions_Default
  name: Default
  nameWithType: SuffixArray.WildcardOptions.Default
  fullName: WaveletMatrix.SuffixArray.WildcardOptions.Default
- uid: WaveletMatrix.SuffixArray.Match
  commentId: T:WaveletMatrix.SuffixArray.Match
  href: WaveletMatrix.SuffixArray.html
  name: SuffixArray.Match
  nameWithType: SuffixArray.Match
  fullName: WaveletMatrix.SuffixArray.Match
  spec.csharp:
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.Match
    name: Match
    href: WaveletMatrix.SuffixArray.Match.html
  spec.vb:
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.Match
    name: Match
    href: WaveletMatrix.SuffixArray.Match.html
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: WaveletMatrix.SuffixArray.SearchWildcard*
  commentId: Overload:WaveletMatrix.SuffixArray.SearchWildcard
  href: WaveletMatrix.SuffixArray.html#WaveletMatrix_SuffixArray_SearchWildcard_System_ReadOnlySpan_System_Char__WaveletMatrix_SuffixArray_WildcardOptions_
  name: SearchWildcard
  nameWithType: SuffixArray.SearchWildcard
  fullName: WaveletMatrix.SuffixArray.SearchWildcard
- uid: WaveletMatrix.SuffixArray.WildcardOptions
  commentId: T:WaveletMatrix.SuffixArray.WildcardOptions
  parent: WaveletMatrix
  href: WaveletMatrix.SuffixArray.html
  name: SuffixArray.WildcardOptions
  nameWithType: SuffixArray.WildcardOptions
  fullName: WaveletMatrix.SuffixArray.WildcardOptions
  spec.csharp:
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.WildcardOptions
    name: WildcardOptions
    href: WaveletMatrix.SuffixArray.WildcardOptions.html
  spec.vb:
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.WildcardOptions
    name: WildcardOptions
    href: WaveletMatrix.SuffixArray.WildcardOptions.html
- uid: System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.Match}
  commentId: T:System.Collections.Generic.IEnumerable{WaveletMatrix.SuffixArray.Match}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<SuffixArray.Match>
  nameWithType: IEnumerable<SuffixArray.Match>
  fullName: System.Collections.Generic.IEnumerable<WaveletMatrix.SuffixArray.Match>
  nameWithType.vb: IEnumerable(Of SuffixArray.Match)
  fullName.vb: System.Collections.Generic.IEnumerable(Of WaveletMatrix.SuffixArray.Match)
  name.vb: IEnumerable(Of SuffixArray.Match)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.Match
    name: Match
    href: WaveletMatrix.SuffixArray.Match.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: WaveletMatrix.SuffixArray
    name: SuffixArray
    href: WaveletMatrix.SuffixArray.html
  - name: .
  - uid: WaveletMatrix.SuffixArray.Match
    name: Match
    href: WaveletMatrix.SuffixArray.Match.html
  - name: )
